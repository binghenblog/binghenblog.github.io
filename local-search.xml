<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>MySQL</title>
    <link href="/2025/03/17/MySQL/"/>
    <url>/2025/03/17/MySQL/</url>
    
    <content type="html"><![CDATA[<h1 id="MySQL数据库"><a href="#MySQL数据库" class="headerlink" title="MySQL数据库"></a>MySQL数据库</h1><h3 id="MySQL简介"><a href="#MySQL简介" class="headerlink" title="MySQL简介"></a>MySQL简介</h3><p>MySQL 是一个关系型数据库管理系统，由瑞典 MySQL AB 公司开发，目前属于 Oracle 公司。MySQL 是一种关联数据库管理系统，关联数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。</p><h3 id="在Windows安装"><a href="#在Windows安装" class="headerlink" title="在Windows安装"></a>在Windows安装</h3><p>去官网下载<a href="https://dev.mysql.com/downloads/mysql/">MySQL官网</a>建议选择LTS(长期支持版本)，里面有安装程序和ZIP压缩包</p><p>安装程序下载之后直接安装就行</p><p>而ZIP压缩包，下载下来找个位置直接解压(例:D:\web\mysql)</p><p>然后在该文件夹下创建my.ini配置文件，编辑my.ini文件</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[client]</span><br><span class="hljs-comment"># 设置mysql客户端默认字符集,utf8mb4支持中文</span><br><span class="hljs-attr">default-character-set</span>=utf8mb4<br><br><span class="hljs-section">[mysqld]</span><br><span class="hljs-comment"># 设置3306端口</span><br><span class="hljs-attr">port</span>=<span class="hljs-number">3306</span><br><span class="hljs-comment"># 设置mysql的安装目录</span><br><span class="hljs-attr">basedir</span>=D:\web\mysql<br><span class="hljs-comment"># 设置 mysql数据库的数据的存放目录，MySQL 8+ 不需要以下配置，系统自己生成即可，否则有可能报错</span><br><span class="hljs-attr">datadir</span>=D:\web\mysql\data<br><span class="hljs-comment"># 允许最大连接数</span><br><span class="hljs-attr">max_connections</span>=<span class="hljs-number">20</span><br><span class="hljs-comment"># 服务端使用的字符集默认为8比特编码的latin1字符集</span><br><span class="hljs-attr">character-set-server</span>=utf8mb4<br><span class="hljs-comment"># 创建新表时将使用的默认存储引擎</span><br><span class="hljs-attr">default-storage-engine</span>=INNODB<br></code></pre></td></tr></table></figure><p>然后用管理员身份打开cmd命令行</p><p>如果数据库文件放到了C盘以外，cmd中切换盘符的指令为</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">D:</span><br></code></pre></td></tr></table></figure><p>切换到对应的盘符然后再输</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-built_in">cd</span> D:\web\mysql\bin<br></code></pre></td></tr></table></figure><p>初始化数据库</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">mysqld --initialize --console<br></code></pre></td></tr></table></figure><p>执行完成后，会输出root用户的初始默认密码如：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cmd">...<br><span class="hljs-number">2018</span>-<span class="hljs-number">04</span>-<span class="hljs-number">20</span>T02:<span class="hljs-number">35</span>:<span class="hljs-number">05</span>.<span class="hljs-number">464644</span>Z <span class="hljs-number">5</span> [Note] [MY-<span class="hljs-number">010454</span>] [Server] A temporary password is generated <span class="hljs-keyword">for</span> root@localhost: APWCY5ws&amp;hjQ<br>...<br></code></pre></td></tr></table></figure><p><strong><code>APWCY5ws&amp;hjQ</code></strong> 就是初始密码，后续登录需要用到，也可以在登陆后修改密码。</p><p>输入以下安装命令</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">mysqld install<br></code></pre></td></tr></table></figure><p>然后将数据库的bin文件夹路径添加环境变量</p><p>启动mysql服务，输入指令</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-built_in">net</span> <span class="hljs-built_in">start</span> mysql<br></code></pre></td></tr></table></figure><p>指令不行的话，就手动打开服务页面自己手动启动MySQL服务</p><h3 id="登录MySQL"><a href="#登录MySQL" class="headerlink" title="登录MySQL"></a>登录MySQL</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">mysql -h 主机名 -u 用户名 -p<br></code></pre></td></tr></table></figure><p>参数说明：</p><ul><li><strong>-h</strong> : 指定客户端所要登录的 MySQL 主机名, 登录本机(localhost 或 127.0.0.1)该参数可以省略;</li><li><strong>-u</strong> : 登录的用户名;</li><li><strong>-p</strong> : 告诉服务器将会使用一个密码来登录, 如果所要登录的用户名密码为空, 可以忽略此选项。</li></ul><p>退出的话就输入**<code>quit</code><strong>或者</strong><code>exit</code><strong>或者</strong><code>\q</code>**</p><h3 id="MySQL用户设置"><a href="#MySQL用户设置" class="headerlink" title="MySQL用户设置"></a>MySQL用户设置</h3><h4 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">CREATE USER &#x27;username&#x27;@&#x27;host&#x27; IDENTIFIED BY &#x27;password&#x27;;<br></code></pre></td></tr></table></figure><ul><li><code>username</code>：用户名。</li><li><code>host</code>：指定用户可以从哪些主机连接。例如，<code>localhost</code> 仅允许本地连接，<code>%</code> 允许从任何主机连接。</li><li><code>password</code>：用户的密码。</li></ul><h4 id="授权权限"><a href="#授权权限" class="headerlink" title="授权权限"></a>授权权限</h4><p>创建用户后，你需要授予他们访问权限，使用 <strong>GRANT</strong> 命令来授予权限：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">GRANT privileges ON database_name.* TO &#x27;username&#x27;@&#x27;host&#x27;;<br></code></pre></td></tr></table></figure><ul><li><code>privileges</code>：所需的权限，如 <code>ALL PRIVILEGES</code>、<code>SELECT</code>、<code>INSERT</code>、<code>UPDATE</code>、<code>DELETE</code> 等。</li><li><code>database_name.*</code>：表示对某个数据库或表授予权限。<code>database_name.*</code> 表示对整个数据库的所有表授予权限，<code>database_name.table_name</code> 表示对指定的表授予权限。</li><li><code>TO &#39;username&#39;@&#39;host&#39;</code>：指定授予权限的用户和主机。</li></ul><h4 id="刷新权限"><a href="#刷新权限" class="headerlink" title="刷新权限"></a>刷新权限</h4><p>授予或撤销权限后，需要刷新权限使更改生效：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">FLUSH PRIVILEGES;<br></code></pre></td></tr></table></figure><h4 id="查看用户权限"><a href="#查看用户权限" class="headerlink" title="查看用户权限"></a>查看用户权限</h4><p>要查看特定用户的权限，可以使用以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SHOW GRANTS FOR &#x27;username&#x27;@&#x27;host&#x27;;<br></code></pre></td></tr></table></figure><h4 id="撤销权限"><a href="#撤销权限" class="headerlink" title="撤销权限"></a>撤销权限</h4><p>要撤销用户的权限，使用 REVOKE 命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">REVOKE privileges ON database_name.* FROM &#x27;username&#x27;@&#x27;host&#x27;;<br></code></pre></td></tr></table></figure><h4 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h4><p>如果需要删除用户，可以使用以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">DROP USER &#x27;username&#x27;@&#x27;host&#x27;;<br></code></pre></td></tr></table></figure><h3 id="管理MySQL"><a href="#管理MySQL" class="headerlink" title="管理MySQL"></a>管理MySQL</h3><p>*为所有列</p><p>列是字段,行是记录</p><p>所有代码不区分大小写(大写是为了方便区分)</p><h4 id="查看数据库"><a href="#查看数据库" class="headerlink" title="查看数据库"></a>查看数据库</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SHOW DATABASES;<br></code></pre></td></tr></table></figure><h4 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">CREATE DATABASE 数据库名;<br></code></pre></td></tr></table></figure><h4 id="选择数据库"><a href="#选择数据库" class="headerlink" title="选择数据库"></a>选择数据库</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">USE 数据库名;<br></code></pre></td></tr></table></figure><h4 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">CREATE TABLE 表名(<br>    column1 datatype,<br>    column2 datatype,<br>    ...<br>);<br></code></pre></td></tr></table></figure><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs mysql">CREATE TABLE users (<br>    id INT AUTO_INCREMENT PRIMARY KEY,<br>    username VARCHAR(50) NOT NULL,<br>    email VARCHAR(100) NOT NULL,<br>    birthdate DATE,<br>    is_active BOOLEAN DEFAULT TRUE<br>);<br></code></pre></td></tr></table></figure><ul><li><code>id</code>: 用户 id，整数类型，自增长，作为主键。</li><li><code>username</code>: 用户名，变长字符串，不允许为空。</li><li><code>email</code>: 用户邮箱，变长字符串，不允许为空。</li><li><code>birthdate</code>: 用户的生日，日期类型。</li><li><code>is_active</code>: 用户是否已经激活，布尔类型，默认值为 true。</li></ul><h4 id="在表中添加数据"><a href="#在表中添加数据" class="headerlink" title="在表中添加数据"></a>在表中添加数据</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">INSERT INTO 表名(对应的字段)VALUES(要添加的数据);<br></code></pre></td></tr></table></figure><h4 id="查看所有的列"><a href="#查看所有的列" class="headerlink" title="查看所有的列"></a>查看所有的列</h4><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> 表名;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>CSS知识点</title>
    <link href="/2025/03/03/CSS/"/>
    <url>/2025/03/03/CSS/</url>
    
    <content type="html"><![CDATA[<h1 id="CSS简介"><a href="#CSS简介" class="headerlink" title="CSS简介"></a>CSS简介</h1><h3 id="CSS概念"><a href="#CSS概念" class="headerlink" title="CSS概念"></a>CSS概念</h3><p>CSS(Cascading Style Sheets)层叠样式表，又叫级联样式表，简称样式表。</p><p>CSS文件后缀名为<code>.css</code></p><p>CSS用于HTML文档中元素样式的定义</p><p>使用CSS的唯一目的是让网页具有美观一致的页面</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p>CSS规则是由两个主要的部分构成：选择器，以及一条或多条声明。</p><p>选择器通常是需要改变样式的HTML元素</p><p>每条声明由一个属性和一个值组成</p><p>属性(property)是你希望设置的样式属性(style attribute)。每个属性有一个值。属性和值被冒号分开</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-xml">    <span class="hljs-comment">&lt;!--在html文件中直接用样式(在head标签里面写)--&gt;</span></span><br><span class="language-xml">    h1 &#123;    <span class="hljs-comment">&lt;!--h1是选择器--&gt;</span></span><br><span class="language-xml">        color: blue;    <span class="hljs-comment">&lt;!--color是属性，blue是值，整体为声明--&gt;</span></span><br><span class="language-xml">        font-size: 12px;</span><br><span class="language-xml">    &#125;</span><br><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="CSS引入方式"><a href="#CSS引入方式" class="headerlink" title="CSS引入方式"></a>CSS引入方式</h1><h3 id="内联样式-行内样式"><a href="#内联样式-行内样式" class="headerlink" title="内联样式(行内样式)"></a>内联样式(行内样式)</h3><p>要使用内联样式，需要在相关标签内使用样式<code>&lt;style&gt;</code>属性。</p><p>Style属性可以包含任何CSS属性。</p><blockquote><p>[!NOTE] 提示</p><p>缺乏整体性和规划性，不利于维护，维护成本高。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background: orange; font-size: 24px;&quot;</span>&gt;</span>CSS<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="内部样式"><a href="#内部样式" class="headerlink" title="内部样式"></a>内部样式</h3><p>当单个文档需要特殊的样式时，就应该使用内部样式表。</p><p>可以使用<code>&lt;style&gt;</code>标签在文档头部定义内部样式表</p><blockquote><p>[!NOTE] 提示</p><p>单个页面内的CSS代码具有统一性和规划性，便于维护，但是在多个页面之间容易混乱。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-tag">h1</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">background</span>: red;</span><br><span class="language-css">        &#125;</span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="外部样式-推荐"><a href="#外部样式-推荐" class="headerlink" title="外部样式(推荐)"></a>外部样式(推荐)</h3><p>当样式需要应用于很多页面时，外部样式表将是理想的选择。</p><p>在使用外部样式表的情况下，可以通过改变一个文件来改变整个站点的外观。</p><p>每个页面使用<code>&lt;link&gt;</code>标签链到样式表。<code>&lt;link&gt;</code>标签在(文档的)头部<code>&lt;head&gt;</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> <span class="hljs-attr">herf</span>=<span class="hljs-string">&quot;xxx.css&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h1><p>CSS语法 规则由两个主要的部分构成：选择器，以及一条或多条声明(样式)</p><h3 id="全局选择器"><a href="#全局选择器" class="headerlink" title="全局选择器"></a>全局选择器</h3><p>可以与任意元素匹配，<strong>优先级最低</strong>，一般做样式初始化。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css">* &#123;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="元素选择器"><a href="#元素选择器" class="headerlink" title="元素选择器"></a>元素选择器</h3><p>HTML文档中的元素，<code>p、b、div、a、img、body</code>等。</p><p>标签选择器，选择的是页面上所有这种类型的标签，所以经常描述“共性”，无法描述某一个元素的“个性”</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">p</span> &#123;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">14px</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>再比如说，我想让“学完前端，继续学习java”这句话中的“前端”两个字变为红色字体，那么可以用<code>&lt;span&gt;</code>标签把“前端”两个字围起来，然后给<code>&lt;span&gt;</code>标签加一个标签选择器。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html">span &#123;<br>color: red;<br>&#125;<br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>学完了<span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>前端<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>，继续学java<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>[!NOTE] 温馨提示</p><ol><li>所有的标签，都可以是选择器.比如ul、li、label、dt、dl、input、div等。</li><li>无论这个标签藏的多深，一定能够被选择上。</li><li>选择的所有，而不是一个。</li></ol></blockquote><h3 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a>类选择器</h3><p>规定用圆点<code>.</code>来定义，针对想要的所有表亲啊使用</p><p>优点：灵活</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html">.one &#123;<br>width: 800px;<br>&#125;<br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;one&quot;</span>&gt;</span>你好<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>[!NOTE] class属性的特点</p><ol><li>类选择器可以被多种标签使用。</li><li>类名不能以数字开头。</li><li>同一个标签可以使用多个类选择器，用空格隔开。</li></ol></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;classone  classtwo&quot;</span>&gt;</span>一个h3标签<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span> <br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;teshu&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;zhongyao&quot;</span>&gt;</span>一个h3标签<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>  <span class="hljs-comment">&lt;!--错误的--&gt;</span><br></code></pre></td></tr></table></figure><h3 id="ID选择器"><a href="#ID选择器" class="headerlink" title="ID选择器"></a>ID选择器</h3><p>针对某一个特定的标签来使用，只能使用一次。</p><p><code>CSS</code>中的ID选择器以<code>#</code>来定义</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html">#two &#123;<br>color: red;<br>&#125; <br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;mytitle&quot;</span>&gt;</span>你好<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>[!NOTE] 特别强调</p><ol><li>ID是唯一的(不能重复使用)</li><li>ID不能以数字开头</li></ol></blockquote><h3 id="合并选择器"><a href="#合并选择器" class="headerlink" title="合并选择器"></a>合并选择器</h3><p>语法：<code>选择器1,选择器2,...&#123;&#125;</code></p><p>作用：提取共同的样式，减少重复代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.header</span>, <span class="hljs-selector-class">.footer</span>&#123;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="选择器的优先级"><a href="#选择器的优先级" class="headerlink" title="选择器的优先级"></a>选择器的优先级</h3><p>CSS中，权重用数字衡量</p><p>元素选择器的权重为：1</p><p>类选择器(class)的权重为：10</p><p>id选择器的权重为：100</p><p>内联样式的权重为：1000</p><p>优先级从高到低：行内样式 &gt; ID选择器 &gt; 类选择器 &gt; 元素选择器</p><h1 id="字体属性"><a href="#字体属性" class="headerlink" title="字体属性"></a>字体属性</h1><p>CSS字体属性定义字体，颜色、大小、加粗、字体样式</p><h3 id="color"><a href="#color" class="headerlink" title="color"></a>color</h3><p>规定文本的颜色</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span>&#123;<span class="hljs-attribute">color</span>: red;&#125;<br><span class="hljs-selector-tag">div</span>&#123;<span class="hljs-attribute">color</span>: <span class="hljs-number">#ff0000</span>;&#125;<span class="hljs-comment">/*推荐*/</span><br><span class="hljs-selector-tag">div</span>&#123;<span class="hljs-attribute">color</span>: <span class="hljs-built_in">rgb</span>(<span class="hljs-number">255</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);&#125;<br><span class="hljs-selector-tag">div</span>&#123;<span class="hljs-attribute">color</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">5</span>);&#125;<span class="hljs-comment">/*a是透明度*/</span><br></code></pre></td></tr></table></figure><h3 id="font-size"><a href="#font-size" class="headerlink" title="font-size"></a>font-size</h3><p>设置文本的大小</p><p>能否管理文字的大小，网页设计中是非常重要的。但是，你不能通过调整字体大小使段落看上去像标题，或者使标题看上去像段落。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">h1</span> &#123;<span class="hljs-attribute">font-size</span>: <span class="hljs-number">40px</span>;&#125;<br><span class="hljs-selector-tag">h2</span> &#123;<span class="hljs-attribute">font-size</span>: <span class="hljs-number">30px</span>;&#125;<br><span class="hljs-selector-tag">p</span> &#123;<span class="hljs-attribute">font-size</span>: <span class="hljs-number">14px</span>;&#125;<br></code></pre></td></tr></table></figure><blockquote><p>[!NOTE] 温馨提示</p><p>chrome浏览器接受最小字体是12px</p></blockquote><h3 id="font-weight"><a href="#font-weight" class="headerlink" title="font-weight"></a>font-weight</h3><p>设置文本的粗细</p><table><thead><tr><th>值</th><th>说明</th></tr></thead><tbody><tr><td>bold</td><td>定义粗体字符</td></tr><tr><td>bolder</td><td>定义更粗的字符</td></tr><tr><td>lighter</td><td>定义更细的字符</td></tr><tr><td>100~900</td><td>定义由细到粗 400等同默认，而700等同于bold</td></tr></tbody></table><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">h1</span> &#123;<span class="hljs-attribute">font-weight</span>: normal;&#125;<br><span class="hljs-selector-tag">div</span> &#123;<span class="hljs-attribute">font-weight</span>: bold;&#125;<br><span class="hljs-selector-tag">p</span> &#123;<span class="hljs-attribute">font-weight</span>: <span class="hljs-number">900</span>;&#125;<br></code></pre></td></tr></table></figure><h3 id="font-style"><a href="#font-style" class="headerlink" title="font-style"></a>font-style</h3><p>指定文本的字体样式</p><p>提示：每个值用逗号分开，如果字体名称包含空格，它必须加上引号</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">p</span> &#123;<span class="hljs-attribute">font-family</span>:<span class="hljs-string">&quot;Microsoft YaHei&quot;</span>;&#125;<span class="hljs-comment">/*微软雅黑*/</span><br></code></pre></td></tr></table></figure><h1 id="背景属性"><a href="#背景属性" class="headerlink" title="背景属性"></a>背景属性</h1><p>CSS背景属性主要由以下几个</p><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>background-color</td><td>设置背景颜色</td></tr><tr><td>background-image</td><td>设置背景图片</td></tr><tr><td>background-position</td><td>设置背景图片显示位置</td></tr><tr><td>background-repeat</td><td>设置背景图片如何填充</td></tr><tr><td>background-size</td><td>设置背景图片大小属性</td></tr></tbody></table><h3 id="background-color属性"><a href="#background-color属性" class="headerlink" title="background-color属性"></a>background-color属性</h3><p>该属性设置背景颜色</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;<span class="hljs-selector-tag">div</span> class=&quot;box&quot;&gt;&lt;/<span class="hljs-selector-tag">div</span>&gt;<br><span class="hljs-selector-class">.box</span> &#123;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;<br><span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;<br><span class="hljs-attribute">background-color</span>: #red;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="background-image属性"><a href="#background-image属性" class="headerlink" title="background-image属性"></a>background-image属性</h3><p>设置元素的背景图像</p><p>元素的背景是元素的总大小，包括填充和边界(不包括外边距)。默认情况下background-image属性放置在元素的左上角，如果图像不够大的话会在垂直和水平方向平铺图像，如果图像大小超过元素大小从图像的左上角显示元素大小的那部分。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;<span class="hljs-selector-tag">div</span> class=&quot;box&quot;&gt;&lt;/<span class="hljs-selector-tag">div</span>&gt;<br><span class="hljs-selector-class">.box</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">600px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">600px</span>;<br>    <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&quot;1.png&quot;</span>)<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="background-repeat属性"><a href="#background-repeat属性" class="headerlink" title="background-repeat属性"></a>background-repeat属性</h3><p>该属性设置如何平铺背景图像</p><table><thead><tr><th>值</th><th>说明</th></tr></thead><tbody><tr><td>repeat</td><td>默认值</td></tr><tr><td>repeat-x</td><td>只向水平方向平铺</td></tr><tr><td>repeat-y</td><td>只向垂直方向平铺</td></tr><tr><td>no-repeat</td><td>不平铺</td></tr></tbody></table><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.box</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">600px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">600px</span>;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#fcc</span>;<br>    <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&quot;img/1.png&quot;</span>)<br>    background-repeat: no-repeat;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="background-size属性"><a href="#background-size属性" class="headerlink" title="background-size属性"></a>background-size属性</h3><p>该属性设置背景图像的大小</p><table><thead><tr><th>值</th><th>说明</th></tr></thead><tbody><tr><td>length</td><td>设置背景图片的宽度和高度，第一个值宽度，第二个值高度，如果只是设置一个，则第二个auto</td></tr><tr><td>percentage</td><td>计算相对位置区域的百分比，第一个值宽度，第二个值高度，如果只是设置一个，则第二个值auto</td></tr><tr><td>cover</td><td>保持图片横纵比并将图片缩放成完全覆盖背景区域的最大大小</td></tr><tr><td>contain</td><td>保持图片横纵比并将图像缩放成适合背景定位区域的最大大小</td></tr></tbody></table><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.box</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">600px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">600px</span>;<br>    <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&quot;img/1.png&quot;</span>)<br>    background-repeat: no-repeat;<br>    <span class="hljs-attribute">background-size</span>: <span class="hljs-number">100%</span> <span class="hljs-number">100%</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="background-position属性"><a href="#background-position属性" class="headerlink" title="background-position属性"></a>background-position属性</h3><p>该属性设置背景图像的起始位置，默认值是：0% 0%</p><table><thead><tr><th>值</th><th>说明</th></tr></thead><tbody><tr><td>left top</td><td>左上角</td></tr><tr><td>left center</td><td>左中</td></tr><tr><td>left bottom</td><td>左下</td></tr><tr><td>right top</td><td>右上角</td></tr><tr><td>right center</td><td>右中</td></tr><tr><td>right bottom</td><td>右下</td></tr><tr><td>center top</td><td>中上</td></tr><tr><td>center center</td><td>中中</td></tr><tr><td>center bottom</td><td>中下</td></tr><tr><td>x% y%</td><td>第一个值是水平位置，第二个值是垂直位置，左上角是0% 0%，右下角是100% 100% 。如果只指定了一个值，其他值默认是50%，默认是0% 0%</td></tr></tbody></table><h1 id="文本属性"><a href="#文本属性" class="headerlink" title="文本属性"></a>文本属性</h1><h3 id="text-align属性"><a href="#text-align属性" class="headerlink" title="text-align属性"></a>text-align属性</h3><p>指定元素文本的水平对齐方式</p><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>left</td><td>文本居左排列(默认)</td></tr><tr><td>right</td><td>文本居右排列</td></tr><tr><td>center</td><td>文本居中排列</td></tr></tbody></table><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">h1</span>&#123;<span class="hljs-attribute">text-align</span>:center;&#125;<br></code></pre></td></tr></table></figure><h3 id="text-decoration属性"><a href="#text-decoration属性" class="headerlink" title="text-decoration属性"></a>text-decoration属性</h3><p>规定添加到文本的修饰，下划线、上划线、删除线等</p><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>underline</td><td>定义下划线</td></tr><tr><td>overline</td><td>定义上划线</td></tr><tr><td>line-through</td><td>定义删除线</td></tr></tbody></table><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">h1</span>&#123;<span class="hljs-attribute">text-decoration</span>: overline;&#125;<br></code></pre></td></tr></table></figure><h3 id="text-transform属性"><a href="#text-transform属性" class="headerlink" title="text-transform属性"></a>text-transform属性</h3><p>控制文本的大小写</p><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>capitalize</td><td>定义每个单词开头大写</td></tr><tr><td>uppercase</td><td>定义全部大写字母</td></tr><tr><td>lowercase</td><td>定义全部小写字母</td></tr></tbody></table><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">p</span> &#123;<span class="hljs-attribute">text-transform</span>: capitalize;&#125;<br></code></pre></td></tr></table></figure><h3 id="text-indent属性"><a href="#text-indent属性" class="headerlink" title="text-indent属性"></a>text-indent属性</h3><p>规定文本块中首行文本的缩进</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">p</span> &#123;<span class="hljs-attribute">text-indent</span>: <span class="hljs-number">50px</span>;&#125;<br></code></pre></td></tr></table></figure><p>提示：负值时允许的。如果值时负数，将第一行左缩进。</p><h1 id="表格属性"><a href="#表格属性" class="headerlink" title="表格属性"></a>表格属性</h1><p>使用CSS可以使HTML表格更美观</p><h3 id="表格边框"><a href="#表格边框" class="headerlink" title="表格边框"></a>表格边框</h3><p>指定CSS表格边框，使用border属性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">table</span>, <span class="hljs-selector-tag">td</span> &#123;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid black;<br>&#125;<span class="hljs-comment">/*边框大小、边框线样式(solid实线)、颜色*/</span><br></code></pre></td></tr></table></figure><h3 id="折叠边框"><a href="#折叠边框" class="headerlink" title="折叠边框"></a>折叠边框</h3><p>border-collapse属性设置边框是否被折叠成一个单一的边框或隔开</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">table</span> &#123;<span class="hljs-attribute">border-collapse</span>: collapse;&#125;<br><span class="hljs-selector-tag">table</span>, <span class="hljs-selector-tag">td</span> &#123;<span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid black;&#125;<br></code></pre></td></tr></table></figure><h3 id="表格宽度和高度"><a href="#表格宽度和高度" class="headerlink" title="表格宽度和高度"></a>表格宽度和高度</h3><p>width和height属性定义表格的宽度和高度</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">table</span> &#123;<span class="hljs-attribute">width</span>:<span class="hljs-number">100%</span>;&#125;<br><span class="hljs-selector-tag">td</span> &#123;<span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;&#125;<br></code></pre></td></tr></table></figure><h3 id="表格文字对齐"><a href="#表格文字对齐" class="headerlink" title="表格文字对齐"></a>表格文字对齐</h3><p>表格中的文本对齐和垂直对齐属性</p><p>text-align属性设置水平对齐方式，向左、右、中心</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">td</span>&#123;<span class="hljs-attribute">text-align</span>: right;&#125;<br></code></pre></td></tr></table></figure><p>垂直对齐属性设置垂直对齐</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">td</span>&#123;<span class="hljs-attribute">height</span>:<span class="hljs-number">50px</span>; <span class="hljs-attribute">vertical-align</span>: bottom;&#125;<br></code></pre></td></tr></table></figure><h3 id="表格填充"><a href="#表格填充" class="headerlink" title="表格填充"></a>表格填充</h3><p>如果在表的内容中控制空格之间的边框，应使用td和th元素的填充属性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">td</span> &#123;<span class="hljs-attribute">padding</span>:<span class="hljs-number">15px</span>;&#125;<br></code></pre></td></tr></table></figure><h3 id="表格颜色"><a href="#表格颜色" class="headerlink" title="表格颜色"></a>表格颜色</h3><p>下面例子指定边框的颜色，和th元素的文本和背景颜色</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">table</span>, <span class="hljs-selector-tag">td</span>, <span class="hljs-selector-tag">th</span> &#123;<span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid green;&#125;<br><span class="hljs-selector-tag">td</span> &#123;<span class="hljs-attribute">background-color</span>:green; <span class="hljs-attribute">color</span>:white;&#125;<br></code></pre></td></tr></table></figure><h1 id="关系选择器"><a href="#关系选择器" class="headerlink" title="关系选择器"></a>关系选择器</h1><h3 id="关系选择器分类"><a href="#关系选择器分类" class="headerlink" title="关系选择器分类"></a>关系选择器分类</h3><ol><li>后代选择器</li><li>子代选择器</li><li>相邻兄弟选择器</li><li>通用兄弟选择器</li></ol><h3 id="后代选择器"><a href="#后代选择器" class="headerlink" title="后代选择器"></a>后代选择器</h3><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><p>选择所有被A元素包含的B元素，中间用空格隔开</p><h4 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">A</span> <span class="hljs-selector-tag">B</span>&#123;&#125;<br></code></pre></td></tr></table></figure><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>宝马<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>奔驰<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ol</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>奥迪<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span>&#123;<br>    <span class="hljs-attribute">color</span>:green;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="子代选择器"><a href="#子代选择器" class="headerlink" title="子代选择器"></a>子代选择器</h3><h4 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h4><p>选择所有作为A元素的直接子元素B，对更深一层的元素不起作用，用&gt;表示</p><h4 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">A</span>&gt;<span class="hljs-selector-tag">B</span>&#123;&#125;<br></code></pre></td></tr></table></figure><h4 id="例子-1"><a href="#例子-1" class="headerlink" title="例子"></a>例子</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">herf</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>子元素1<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>孙元素<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>子元素2<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span>&gt;<span class="hljs-selector-tag">a</span>&#123;<br>    <span class="hljs-attribute">color</span>:red;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="相邻兄弟选择器"><a href="#相邻兄弟选择器" class="headerlink" title="相邻兄弟选择器"></a>相邻兄弟选择器</h3><h4 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h4><p>选择紧跟A元素后的C元素，用加号(+)表示，选择相邻的第一个兄弟元素(向下选择)</p><h4 id="语法-3"><a href="#语法-3" class="headerlink" title="语法"></a>语法</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">A</span>+C&#123;&#125;<br></code></pre></td></tr></table></figure><h4 id="例子-2"><a href="#例子-2" class="headerlink" title="例子"></a>例子</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>h1元素<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>第一个元素<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>第二个元素<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">h1</span>+<span class="hljs-selector-tag">p</span> &#123;<br>    <span class="hljs-attribute">color</span>:red;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="通用兄弟选择器"><a href="#通用兄弟选择器" class="headerlink" title="通用兄弟选择器"></a>通用兄弟选择器</h3><h4 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h4><p>选择A元素之后的所有兄弟元素B，作用于多个元素，用~隔开</p><h4 id="语法-4"><a href="#语法-4" class="headerlink" title="语法"></a>语法</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">A</span>~<span class="hljs-selector-tag">B</span> &#123;&#125;<br></code></pre></td></tr></table></figure><h4 id="例子-3"><a href="#例子-3" class="headerlink" title="例子"></a>例子</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>h1元素<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>元素1<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>元素2<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">h1</span>~<span class="hljs-selector-tag">p</span> &#123;<br>    <span class="hljs-attribute">color</span>:red;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="CSS盒子模型"><a href="#CSS盒子模型" class="headerlink" title="CSS盒子模型"></a>CSS盒子模型</h1><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>所有的HTML元素可以看作盒子，在CSS中，“box model”这一术语使用来<strong>设计和布局时使用</strong>(<code>&lt;div&gt;</code>)</p><p>CSS盒模型本质上是一个盒子，封装周围的HTML元素，它包括：</p><ol><li>Margin(外边距)-清除边框外的区域，外边距时透明的(两个值：第一个为上下，第二个为左右)</li><li>Border(边框)-围绕在内边距和内容外的边框(边框粗细、实线或虚线、线颜色)</li><li>Padding(内边距)-清除内容周围的区域，内边距是透明的(两个值：第一个为上下，第二个为左右)</li><li>Content(内容)-盒子的内容，显示文本和图像</li></ol><p>例子：如果把盒子模型看作是一个生活中的快递，那么内容部分&#x3D;你买的物品，内边距&#x3D;快递盒子中的泡沫，边距&#x3D;快递盒子，外边距&#x3D;两个快递盒子之间的距离。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span>&#123;<br>    <span class="hljs-attribute">padding-left</span>: <span class="hljs-number">50px</span>;<span class="hljs-comment">/*左内边距*/</span><br>    <span class="hljs-attribute">padding-right</span>: <span class="hljs-number">100px</span>;<span class="hljs-comment">/*右内边距*/</span><br>    <span class="hljs-attribute">padding-top</span>: <span class="hljs-number">150px</span>;<span class="hljs-comment">/*上内边距*/</span><br>    <span class="hljs-attribute">padding-bottom</span>: <span class="hljs-number">20px</span>;<span class="hljs-comment">/*下内边距*/</span><br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">2px</span> solid red;<span class="hljs-comment">/*边框粗细、实线、线颜色*/</span><br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span>;<span class="hljs-comment">/*外边距*/</span><br>&#125;<br></code></pre></td></tr></table></figure><h1 id="弹性盒子模型-flex-box"><a href="#弹性盒子模型-flex-box" class="headerlink" title="弹性盒子模型(flex box)"></a>弹性盒子模型(flex box)</h1><h3 id="定义-4"><a href="#定义-4" class="headerlink" title="定义"></a>定义</h3><p>弹性盒子是CSS3的一种新的布局模式</p><p>CSS3弹性盒是一种当页面需要适应不同的屏幕大小以及设备类型时确保元素拥有元素恰当的行为的布局方式</p><p>引入弹性盒布局模型的目的是提供一种更加有效的方式来对一个容器中的子元素进行排列、对齐和分配空白空间</p><h3 id="CSS3弹性盒内容"><a href="#CSS3弹性盒内容" class="headerlink" title="CSS3弹性盒内容"></a>CSS3弹性盒内容</h3><p>弹性盒子由弹性容器(Flex container)和弹性子元素(Flex item)组成</p><p>弹性容器通过设置<code>&lt;display&gt;</code>属性的值为<code>&lt;flex&gt;</code>将其定义为弹性容器</p><p>弹性容器内包含了一个或多个弹性子元素</p><p>提示：弹性容器外及弹性子元素内是正常渲染的。弹性盒子只定义了弹性子元素如何在弹性容器内布局</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-class">.flex-container</span> &#123;</span><br><span class="language-css">        <span class="hljs-attribute">display</span>: flex;<span class="hljs-comment">/*定义盒子为弹性盒子*/</span></span><br><span class="language-css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">400px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">200px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">background-color</span>: lightgrey;</span><br><span class="language-css">    &#125;</span><br><span class="language-css">    <span class="hljs-selector-class">.box</span> &#123;</span><br><span class="language-css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">background-color</span>: cornflowerblue;</span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;flex-container&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;flex-item&quot;</span>&gt;</span>flex item 1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;flex-item&quot;</span>&gt;</span>flex item 2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;flex-item&quot;</span>&gt;</span>flex item 3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>提示：默认弹性盒里的内容是横向摆放</p><h3 id="父元素上的属性"><a href="#父元素上的属性" class="headerlink" title="父元素上的属性"></a>父元素上的属性</h3><h4 id="display属性"><a href="#display属性" class="headerlink" title="display属性"></a>display属性</h4><p><code>&lt;display:flex;&gt;</code>开启弹性盒</p><p><code>display:flex;</code>属性设置后子元素默认水平排列</p><h4 id="flex-direction属性"><a href="#flex-direction属性" class="headerlink" title="flex-direction属性"></a>flex-direction属性</h4><h5 id="定义-5"><a href="#定义-5" class="headerlink" title="定义"></a>定义</h5><p>flex-direction属性指定了单行子元素在父容器中的位置</p><h5 id="语法-5"><a href="#语法-5" class="headerlink" title="语法"></a>语法</h5><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">flex-direction</span>: row | row-reverse | column | column-reverse<br></code></pre></td></tr></table></figure><ol><li>row：横向从左到右排列(左对齐)，(默认)</li><li>row-reverse：反转横向排列(右对齐，从后往前排，最后一项在最前面)</li><li>column：纵向排列</li><li>column-reverse：反转纵向排列，从后往前排，最后一项在最上面</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.flex-container</span> &#123;<br>    <span class="hljs-attribute">display</span>: flex;<br>    <span class="hljs-attribute">flex-direction</span>: column;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">400px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">250px</span>;<br>    <span class="hljs-attribute">background-color</span>: lightgrey;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="justify-content属性"><a href="#justify-content属性" class="headerlink" title="justify-content属性"></a>justify-content属性</h4>]]></content>
    
    
    <categories>
      
      <category>Web前端开发</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>HTML5知识点</title>
    <link href="/2025/01/12/html%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <url>/2025/01/12/html%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
    
    <content type="html"><![CDATA[<h1 id="HTML5介绍"><a href="#HTML5介绍" class="headerlink" title="HTML5介绍"></a>HTML5介绍</h1><p>HTML5是用来描述网页的一种语言，被称为超文本标记语言。用HTML5编写的文件，后缀以<code>.html</code>结尾</p><p>HTML是一种标记语言，标记语言是一套标记标签。</p><p>标签是有尖括号包围的关键字，例如：<code>&lt;html&gt;</code></p><p>标签有两种表现形式：</p><ol><li>双标签，例如：<code>&lt;html&gt;&lt;/html&gt;</code></li><li>单标签，例如：<code>&lt;img&gt;</code></li></ol><h1 id="HTML5的DOCTYPE声明"><a href="#HTML5的DOCTYPE声明" class="headerlink" title="HTML5的DOCTYPE声明"></a>HTML5的DOCTYPE声明</h1><p>DOCTYPE是document type(文档类型)的缩写。<code>&lt;!DOCTYPE html&gt;</code>是H5的声明位于文档的最前面，处于标签之前。它是网页必备的组成部分，避免浏览器的怪异模式。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DICTYPE <span class="hljs-keyword">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="HTML5基本骨架"><a href="#HTML5基本骨架" class="headerlink" title="HTML5基本骨架"></a>HTML5基本骨架</h1><h3 id="html标签"><a href="#html标签" class="headerlink" title="html标签"></a>html标签</h3><p>定义HTML文档，这个元素我们浏览器看到后就明白这是个HTML文档了，所以一些元素要包裹在它里面，标签限定了文档的开始点和结束点。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="head标签"><a href="#head标签" class="headerlink" title="head标签"></a>head标签</h3><p>head标签用于定义文档的头部。文档的头部描述了文档的各种属性和信息，包括文档的标题、在Web中的位置以及和其他文档的关系等。绝大多数文档头部包括的数据都不会真正作为内容显示给读者。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="body标签"><a href="#body标签" class="headerlink" title="body标签"></a>body标签</h3><p>body元素定义文档的主题。</p><p>body元素包含文档的所有内容(比如文本、超链接、图像、表格和列表等)</p><p>它会直接在页面中显示出来，也就是用户可以以直接观看到的内容。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    文字会显示在浏览器中<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="title标签"><a href="#title标签" class="headerlink" title="title标签"></a>title标签</h3><ol><li>可定义文档的标题。</li><li>它显示在浏览器窗口的标题栏或状态栏上。</li><li><code>&lt;title&gt;</code>标签是<code>&lt;head&gt;</code>标签中唯一必须要求包含内容，也就是说写head一定要写title。</li><li><code>&lt;title&gt;</code>的增加有利于SEO优化。</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">SEO是搜索引擎优化的英文缩写。通过对网站内容调整，满足搜索引擎的排名需求<br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>第一个页面<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    文字会显示在浏览器中<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="meta标签"><a href="#meta标签" class="headerlink" title="meta标签"></a>meta标签</h3><p>meta标签用来描述一个HTML网页文档的属性，关键词等，例如：<code>charset=&quot;utf-8&quot;</code>是说当前使用的是<code>utf-8</code>编码格式，在开发中会经常看到<code>utf-8</code>或者是<code>gbk</code>，这些都是编码格式，通常使用<code>utf-8</code>。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&#x27;en&#x27;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">chatrset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>标题<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><h3 id="标题介绍与应用"><a href="#标题介绍与应用" class="headerlink" title="标题介绍与应用"></a>标题介绍与应用</h3><p>标题(Heading)是通过<code>&lt;h1&gt;-&lt;h6&gt;</code>标签进行定义的。</p><p><code>&lt;h1&gt;</code>定义最大的标题 <code>&lt;h6&gt;</code>定义最小的标题</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>一级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>二级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>三级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>四级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h5</span>&gt;</span>五级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h5</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>六级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">生成h1~h6快捷键：<span class="hljs-built_in">h</span><span class="hljs-variable">$</span>*<span class="hljs-number">6</span><br></code></pre></td></tr></table></figure><h3 id="正确使用标题"><a href="#正确使用标题" class="headerlink" title="正确使用标题"></a>正确使用标题</h3><p>请确保将HTML标题标签只用于标题。</p><p>不要仅仅是为了生成粗体或大号的文本而使用标题。</p><p>正确使用标题有益于SEO</p><p>应该将<code>&lt;h1&gt;</code>用作主标题(最重要的),其次是<code>&lt;h2&gt;</code>(次重要的)，以此类推</p><h3 id="标题标签位置摆放"><a href="#标题标签位置摆放" class="headerlink" title="标题标签位置摆放"></a>标题标签位置摆放</h3><p>在标签中添加属性：<code>align=&quot;left | center | right&quot;</code>默认居左</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span> <span class="hljs-attr">align</span>=<span class="hljs-string">&quot;center&quot;</span>&gt;</span>文字居中<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="段落、换行、水平线"><a href="#段落、换行、水平线" class="headerlink" title="段落、换行、水平线"></a>段落、换行、水平线</h1><h3 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h3><p>段落是通过<code>&lt;p&gt;</code>标签定义的</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是一个段落标签<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h3><p>如果想要换行就用<code>&lt;br&gt;</code></p><p><code>&lt;br&gt;</code>元素是一个空的HTML元素</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这个<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>段落<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>演示了分行的效果<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="水平线"><a href="#水平线" class="headerlink" title="水平线"></a>水平线</h3><p><code>&lt;hr/&gt;</code>标签在HTML页面中创建水平线</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">align</span>=<span class="hljs-string">&quot;&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure><p>属性：</p><ol><li>color：设置水平线的颜色</li><li>width：设置水品线的长度</li><li>size：设置水平线的高度</li><li>align：设置水平线的对齐方式(默认是居中)，可选择<code>left | right</code></li></ol><h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><p>网站中最多的元素，正常来讲是图片</p><p><code>&lt;img&gt;</code>标签定义HTML页面中的图像(此标签是单标签，不需要进行闭合操作)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">height-</span>&quot;&quot;&gt;</span><br></code></pre></td></tr></table></figure><p>属性：</p><ol><li>src：路径(图片的地址与名字)</li><li>alt：规定图像的替代文本</li><li>width：规定图像的宽度</li><li>height：规定图像的高度</li><li>title：鼠标悬停在图片上给予提示</li></ol><h1 id="路径详解"><a href="#路径详解" class="headerlink" title="路径详解"></a>路径详解</h1><h3 id="绝对路径"><a href="#绝对路径" class="headerlink" title="绝对路径"></a>绝对路径</h3><p>绝对路径是电脑的盘符存储与访问的具体地址</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">E</span>:\img\<span class="hljs-number">1</span>.png<br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;E:\img\1.png&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="相对路径"><a href="#相对路径" class="headerlink" title="相对路径"></a>相对路径</h3><p>两者相对的关系，两者在同一路径下可以直接访问</p><ol><li>子级关系：<code>/</code></li><li>父级关系：<code>../</code></li><li>同级关系：<code>./</code></li></ol><h3 id="网络路径"><a href="#网络路径" class="headerlink" title="网络路径"></a>网络路径</h3><p>网络中的具体地址：<code>https:\\......</code></p><h1 id="超文本链接"><a href="#超文本链接" class="headerlink" title="超文本链接"></a>超文本链接</h1><h3 id="超链接描述"><a href="#超链接描述" class="headerlink" title="超链接描述"></a>超链接描述</h3><p>HTML使用标签<code>&lt;a&gt;</code>来设置超文本链接</p><p>超文本链接可以是一个字，一个词，或者是一组词，也可以是图片，可以点击这些内容来跳转到新的文档或者当前文档中的某个部分。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;地址&quot;</span>&gt;</span>链接文本<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="超链接属性"><a href="#超链接属性" class="headerlink" title="超链接属性"></a>超链接属性</h3><p>在标签<code>&lt;a&gt;</code>中使用了<code>href</code>属性来描述链接的地址</p><p>默认情况下，链接将以以下形式出现在浏览器中：</p><ol><li>一个未访问过的链接显示为蓝色字体并带有下划线。</li><li>访问过的链接显示为紫色并带有下划线。</li><li>点击链接时，链接显示为红色并带有下划线。</li></ol><blockquote><p>[!NOTE]特别提示：</p><p>后期可以通过CSS样式修改掉这些效果。</p></blockquote><h3 id="超链接表现"><a href="#超链接表现" class="headerlink" title="超链接表现"></a>超链接表现</h3><p>当把鼠标指针移动到网页中的某个链接上时，箭头会变成一个小手。</p><h1 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h1><h3 id="常用文本标签"><a href="#常用文本标签" class="headerlink" title="常用文本标签"></a>常用文本标签</h3><table><thead><tr><th>标签</th><th>描述</th></tr></thead><tbody><tr><td><code>&lt;em&gt;</code></td><td>定义着重文字</td></tr><tr><td><code>&lt;b&gt;</code></td><td>定义粗体文本</td></tr><tr><td><code>&lt;i&gt;</code></td><td>定义斜体字</td></tr><tr><td><code>&lt;strong&gt;</code></td><td>定义加重语气</td></tr><tr><td><code>&lt;del&gt;</code></td><td>定义删除字</td></tr><tr><td><code>&lt;span&gt;</code></td><td>元素没有特定的含义</td></tr></tbody></table><blockquote><p>[!NOTE]特别提示：</p><p>常用文本标签和段落时不同的，段落代表一段文本，而文本标签一般表示文本词汇。</p></blockquote><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>有序列表时一列项目，列表项目使用数字进行标记。</p><p>有序列表始于<code>&lt;ol&gt;</code>标签。每个列表始于<code>&lt;li&gt;</code>标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ol</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>第一<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>第二<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span><br></code></pre></td></tr></table></figure><p>type属性</p><p><code>&lt;ol&gt;</code>的属性type拥有的选项：</p><ol><li>1 表示列表项目用数字标号(1,2,3…)</li><li>a 表示列表项目用小写字母标号(a,b,c…)</li><li>A 表示列表项目用大写字母标号(A,B,C…)</li><li>i 表示列表项目用小写罗马数字标号(i,ii,iii…)</li><li>l 表示列表项目用大写罗马数字标号(I,II,III…)</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ol</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;a&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>苹果<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>香蕉<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>无序列表是一个项目的列表，此列项目使用粗体圆点(经典的小黑圆圈)进行标记</p><p>无序列表始于<code>&lt;ul&gt;</code>标签。每个列表项始于<code>&lt;li&gt;</code>标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>第一<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>第二<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br></code></pre></td></tr></table></figure><p>type属性</p><p><code>&lt;ul&gt;</code>的属性type拥有的选项：</p><ol><li>disc 实心圆(默认)</li><li>circle 空心圆</li><li>square 小方块</li><li>none 不显示</li></ol><p>常见应用场景</p><ol><li>导航页面！！！</li><li>无序的列表效果</li></ol><blockquote><p>[!NOTE]快捷键：</p><p>快速生成ul+li的布局：ul&gt;li*3 (数字根据自己的需要的li数量修改)</p></blockquote><h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><h3 id="表格组成和特点"><a href="#表格组成和特点" class="headerlink" title="表格组成和特点"></a>表格组成和特点</h3><p>组成：行、列、单元格</p><p>单元格特点：同行等高、同列等宽</p><h3 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h3><p>表格：<code>&lt;table&gt;</code></p><p>行：<code>&lt;tr&gt;</code></p><p>单元格(列)：<code>&lt;td&gt;</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">table</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>张三<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>李四<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>王五<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>赵六<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>[!NOTE]快捷键：</p><p>快速生成表格结构：table&gt;tr*2&gt;td{文本信息}</p></blockquote><h3 id="表格属性"><a href="#表格属性" class="headerlink" title="表格属性"></a>表格属性</h3><ol><li>border：设置表格的边框</li><li>width：设置表格的宽度</li><li>height：设置表格的高度</li></ol><h3 id="单元格合并"><a href="#单元格合并" class="headerlink" title="单元格合并"></a>单元格合并</h3><ol><li>水平合并：colspan(保留左边，删除右边)</li><li>垂直合并：rowspan(保留上面，删除下边)</li></ol><h1 id="Form表单"><a href="#Form表单" class="headerlink" title="Form表单"></a>Form表单</h1><p>表单在Web网页中用来给用户填写信息，从而能采集用户信息，使网页具有交互的功能。</p><p>所有的用户输入内容的地方都用表单来写，如登录注册、搜索框。</p><p>表单是由容器和控件组成的，一个表单一般应该包括用户填写信息的输入框，提交按钮等，这些输入框，按钮叫做控件，表单就是容器，它能够容纳各种各样的控件。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;get|post&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;myform&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="属性说明"><a href="#属性说明" class="headerlink" title="属性说明"></a>属性说明</h3><p>action：服务器地址</p><p>name：表单名称</p><p>method中Get和Post的区别</p><ol><li>数据提交方式，get把提交的数据url可以看到，post看不到</li><li>get一般用于提交少量数据，post用来提交大量数据</li></ol><h3 id="表单元素"><a href="#表单元素" class="headerlink" title="表单元素"></a>表单元素</h3><p>一个完整的表单包含三个基本组成部分：表单标签、表单域、表单按钮</p><ol><li>表单标签(整体)</li><li>表单域(输入框)</li><li>表单按钮(例如：提交按钮)</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">botton</span>&gt;</span>按钮名字<span class="hljs-tag">&lt;/<span class="hljs-name">botton</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="文本框"><a href="#文本框" class="headerlink" title="文本框"></a>文本框</h3><p>文本域通过<code>&lt;input type=&quot;text&quot;&gt;</code>标签来设定，当用户要在表单中输入字母、数字等内容时，就会用到文本域</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span><br>    第一个用户名: <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;firstname&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>    第二个用户名: <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;lastname&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="密码框"><a href="#密码框" class="headerlink" title="密码框"></a>密码框</h3><p>密码字段通过标签<code>&lt;input type=&quot;password&quot;&gt;</code>来定义</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span><br>    密码: <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;pwd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>[!NOTE]</p><p>密码字段字符不会明文显示，而是以星号或者圆点来替代</p></blockquote><h3 id="提交按钮"><a href="#提交按钮" class="headerlink" title="提交按钮"></a>提交按钮</h3><p>当用户单击确认按钮时，表单的内容会被传送到另一个文件。</p><p>表单的动作属性定义了目的文件的文件名。</p><p>由动作属性定义的这个文件通常会对接受到的输入数据进行相关的处理。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;input&quot;</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;get&quot;</span>&gt;</span><br>    用户名: <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;user&quot;</span>&gt;</span><br>    密码: <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;pwd&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;提交&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="块元素与行内元素-内联元素"><a href="#块元素与行内元素-内联元素" class="headerlink" title="块元素与行内元素(内联元素)"></a>块元素与行内元素(内联元素)</h1><p>HTML5出现之前，经常把元素按照块级元素和内联元素来区分。</p><p>在HTML5中，元素不再按照这种方式来区分，而是按照内容模型来区分，分为元数据型(metadata content)、区块型(sectioning content)、标题型(heading content)、文档流型(flow content)、语句型(phrasing content)、内嵌型(embedded content)、交互型 (interactive content)。元素不属于任何一个类别，被称为穿透的，元素可能属于不止一个类别，称为混合的。</p><h3 id="内联元素和块级元素的区别"><a href="#内联元素和块级元素的区别" class="headerlink" title="内联元素和块级元素的区别"></a>内联元素和块级元素的区别</h3><table><thead><tr><th>块级元素</th><th>内联元素</th></tr></thead><tbody><tr><td>块元素在页面中独占一行(自上向下垂直排列)</td><td>行内元素不会独占页面中的一行，只占自身的大小</td></tr><tr><td>可以设置width，height属性</td><td>行内元素设置width，height属性无效</td></tr><tr><td>一般块级元素可以包含行内元素和其他块级元素</td><td>一般内联元素包含内联元素不包含块级元素</td></tr></tbody></table><p>常见的块级元素(独占一行)</p><blockquote><p>div、form、h1~h6、hr、p、table、ul等</p></blockquote><p>常见的内联元素(行内元素)</p><blockquote><p>a、b、em、i、span、strong等</p></blockquote><p>行内块级元素(特点：不换行、能够识别宽高)</p><blockquote><p>button、img、input等</p></blockquote><h1 id="HTML5新增标签"><a href="#HTML5新增标签" class="headerlink" title="HTML5新增标签"></a>HTML5新增标签</h1><p>HTML5是HTML最新的修订版本，2014年10月由万维网联盟(W3C)完成标准制定</p><p>在HTML5出现之前，一般采用DIV+CSS布局页面。</p><p>但是这样的布局方式不仅使我们的文档结构不够清晰，而且**不利于搜索引擎爬虫对我们页面的爬取(不利于SEO)**。为了解决上述缺点，HTML5 新增了很多新的语义化标签</p><h1 id="扩展知识"><a href="#扩展知识" class="headerlink" title="扩展知识"></a>扩展知识</h1><p>div容器元素，夜市页面中见到的最多的元素</p><p>以前的网页标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;header&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;nav&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;article&quot;</span></span><br><span class="hljs-tag">&lt;<span class="hljs-attr">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;section&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;silder&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;footer&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>现在HTML5的用法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">header</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">header</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">nav</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">nav</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">aside</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">aside</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">footer</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">footer</span>&gt;</span><br></code></pre></td></tr></table></figure><p>HTML5新标签</p><ol><li><code>&lt;header&gt;&lt;/header&gt;</code>头部</li><li><code>&lt;nav&gt;&lt;/nav&gt;</code>导航</li><li><code>&lt;section&gt;&lt;/section&gt;</code>定义文档中的节，比如章节、页眉、页脚</li><li><code>&lt;aside&gt;&lt;/aside&gt;</code>侧边栏</li><li><code>&lt;footer&gt;&lt;/footer&gt;</code>脚部</li><li><code>&lt;article&gt;&lt;/article&gt;</code>代表一个独立的、完整的相关内容块，例如一篇完整的论坛帖子，一个博客文章，一个用户评论等</li></ol>]]></content>
    
    
    <categories>
      
      <category>Web前端开发</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>推荐实用网站</title>
    <link href="/2024/12/28/%E6%8E%A8%E8%8D%90%E5%AE%9E%E7%94%A8%E7%BD%91%E7%AB%99/"/>
    <url>/2024/12/28/%E6%8E%A8%E8%8D%90%E5%AE%9E%E7%94%A8%E7%BD%91%E7%AB%99/</url>
    
    <content type="html"><![CDATA[<p>这是一些网站推荐</p><p><a href="https://www.xitongku.com/index.html">MSDN系统库－致力于原版windows生态服务</a></p><p><a href="https://www.mcnav.net/">MCNav | MC导航网 | Minecraft网址导航站 | MC工具大全</a></p><p><a href="https://www.ningnana.top/">Minecraft汉化补丁分享站</a></p><p><a href="https://lanrenao.com/">懒人导航网 | 全网最实用简洁的懒人导航网</a></p><p><a href="https://www.tboxn.com/">Tbox导航 | 只收录优质在线工具的导航网站</a></p><p><a href="https://www.kdocs.cn/l/corXUSaAaKVM">各种游戏影视软件总站</a></p><p><a href="https://files.ra3.cc/">红警三资源站 | 首页</a></p><p><a href="https://www.futurepedia.io/">未来百科 - 最大的人工智能工具目录 |家</a></p><p><a href="https://bell-sw.com/pages/downloads/">Java下载</a></p><p><a href="https://www.flysheep6.com/">flysheep资源避难所</a></p><p><a href="https://gog-games.to/search/all">GOG游戏 |下载免费的GOG电脑游戏</a></p><p><a href="https://steamdb.info/">SteamDB</a></p><p><a href="http://tool.liumingye.cn/music/?page=searchPage#/">MyFreeMP3</a></p><p>看动漫网站或软件推荐</p><p>C站：<a href="https://www.clicli.cloud/">C站软件下载</a></p><p>Omofun动漫：<a href="https://cn.211dm.com/">Omofun动漫-一个专注的免费动漫网站</a></p><p>樱花动漫：<a href="https://www.yinghua3.com/">樱花动漫-专注动漫的网站-免费在线观看动漫樱花</a></p><p><a href="https://ai.animedb.cn/">AnimeTrace-以图识番-在线AI识番引擎|日漫识别|动漫查询|动漫基因库</a></p>]]></content>
    
    
    <categories>
      
      <category>推荐</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>linux笔记</title>
    <link href="/2024/12/26/linux%E7%AC%94%E8%AE%B0/"/>
    <url>/2024/12/26/linux%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="linux命令"><a href="#linux命令" class="headerlink" title="linux命令"></a>linux命令</h1><ol><li><h4 id="pwd：显示当前完整路径。"><a href="#pwd：显示当前完整路径。" class="headerlink" title="pwd：显示当前完整路径。"></a>pwd：显示当前完整路径。</h4></li><li><h4 id="cd：更改当前工作目录。"><a href="#cd：更改当前工作目录。" class="headerlink" title="cd：更改当前工作目录。"></a>cd：更改当前工作目录。</h4><p>..返回上一级。 ~表示home目录</p></li><li><h4 id="ls：显示当前路径下所有目录和文件。"><a href="#ls：显示当前路径下所有目录和文件。" class="headerlink" title="ls：显示当前路径下所有目录和文件。"></a>ls：显示当前路径下所有目录和文件。</h4><p>“-l”：列出文件详细信息。</p><p>“-a”：显示所有文件(包括隐藏文件)</p></li><li><h4 id="clear：清屏"><a href="#clear：清屏" class="headerlink" title="clear：清屏"></a>clear：清屏</h4></li><li><h4 id="rm：删除文件。"><a href="#rm：删除文件。" class="headerlink" title="rm：删除文件。"></a>rm：删除文件。</h4><p>“-r”：删除目录，“-rf”：强制删除文件和目录</p></li><li><h4 id="touch：创建文件"><a href="#touch：创建文件" class="headerlink" title="touch：创建文件"></a>touch：创建文件</h4></li><li><h4 id="mkdir：创建目录。"><a href="#mkdir：创建目录。" class="headerlink" title="mkdir：创建目录。"></a>mkdir：创建目录。</h4><p>“-p”：可以一次创建多级目录。</p></li><li><h4 id="df：查看磁盘当前可用空间-查看当前光盘挂载情况-。"><a href="#df：查看磁盘当前可用空间-查看当前光盘挂载情况-。" class="headerlink" title="df：查看磁盘当前可用空间(查看当前光盘挂载情况)。"></a>df：查看磁盘当前可用空间(查看当前光盘挂载情况)。</h4></li><li><h4 id="free：查看当前可用内存容量。"><a href="#free：查看当前可用内存容量。" class="headerlink" title="free：查看当前可用内存容量。"></a>free：查看当前可用内存容量。</h4></li><li><h4 id="file：输出文件内容的简要描述。"><a href="#file：输出文件内容的简要描述。" class="headerlink" title="file：输出文件内容的简要描述。"></a>file：输出文件内容的简要描述。</h4></li><li><h4 id="cp：复制文件或目录。"><a href="#cp：复制文件或目录。" class="headerlink" title="cp：复制文件或目录。"></a>cp：复制文件或目录。</h4></li><li><h4 id="mv：移动或重命名文件或目录。"><a href="#mv：移动或重命名文件或目录。" class="headerlink" title="mv：移动或重命名文件或目录。"></a>mv：移动或重命名文件或目录。</h4></li><li><h4 id="输出重定向。-：覆盖输出，-：追加输出。语法：指令-文件路径"><a href="#输出重定向。-：覆盖输出，-：追加输出。语法：指令-文件路径" class="headerlink" title="输出重定向。&gt;：覆盖输出，&gt;&gt;：追加输出。语法：指令&gt;文件路径"></a>输出重定向。&gt;：覆盖输出，&gt;&gt;：追加输出。语法：指令&gt;文件路径</h4></li><li><h4 id="cat：直接打开文件，查看文件内容。"><a href="#cat：直接打开文件，查看文件内容。" class="headerlink" title="cat：直接打开文件，查看文件内容。"></a>cat：直接打开文件，查看文件内容。</h4></li><li><h4 id="head：查看文件前n行。"><a href="#head：查看文件前n行。" class="headerlink" title="head：查看文件前n行。"></a>head：查看文件前n行。</h4><p>语法：head -n 文件路径(n为行数，默认为前十行)</p></li><li><h4 id="tail：查看文件后n行。"><a href="#tail：查看文件后n行。" class="headerlink" title="tail：查看文件后n行。"></a>tail：查看文件后n行。</h4><p>语法：tail -n 文件路径（n为行数，默认后十行）</p><p>tail -f 文件：查看文件的动态变化内容（不能是用户手动增加的）</p></li><li><h4 id="less：查看文件内容以较少内容输出-可以翻页-，more类似-可以自动退出"><a href="#less：查看文件内容以较少内容输出-可以翻页-，more类似-可以自动退出" class="headerlink" title="less：查看文件内容以较少内容输出(可以翻页)，more类似(可以自动退出)"></a>less：查看文件内容以较少内容输出(可以翻页)，more类似(可以自动退出)</h4></li><li><h4 id="wc：统计文件内容信息。"><a href="#wc：统计文件内容信息。" class="headerlink" title="wc：统计文件内容信息。"></a>wc：统计文件内容信息。</h4><table><thead><tr><th align="center">参数</th><th>说明</th></tr></thead><tbody><tr><td align="center">-l</td><td>表示lines行数</td></tr><tr><td align="center">-w</td><td>表示words单词数</td></tr><tr><td align="center">-c</td><td>表示bytes字节数</td></tr></tbody></table></li><li><h4 id="grep：查找指定内容"><a href="#grep：查找指定内容" class="headerlink" title="grep：查找指定内容"></a>grep：查找指定内容</h4></li><li><h4 id="：管道符"><a href="#：管道符" class="headerlink" title="|：管道符"></a>|：管道符</h4><p>语法：命令1 | 命令2 (命令1的结果作为命令2的输入)。</p><p>案例：ls &#x2F; |grep y (查询根目录下包含y字母的文档名称)</p></li><li><h4 id="ln：创建链接-快捷方式"><a href="#ln：创建链接-快捷方式" class="headerlink" title="ln：创建链接(快捷方式)"></a>ln：创建链接(快捷方式)</h4><p>语法：ln 参数 源文件 新文件</p><p>参数：-s：软连接(不加为硬链接)</p></li><li><h4 id="alias：别名"><a href="#alias：别名" class="headerlink" title="alias：别名"></a>alias：别名</h4><p>语法：alias 别名&#x3D;“可执行的命令”</p></li><li><h4 id="su：切换用户"><a href="#su：切换用户" class="headerlink" title="su：切换用户"></a>su：切换用户</h4></li><li><h4 id="useradd：创建用户-在root下"><a href="#useradd：创建用户-在root下" class="headerlink" title="useradd：创建用户(在root下)"></a>useradd：创建用户(在root下)</h4><p>语法：useradd 参数 用户名</p><table><thead><tr><th>参数</th><th>说明</th><th>语法</th></tr></thead><tbody><tr><td>-u</td><td>指定用户UID</td><td>useradd  -u  用户UID  用户名</td></tr><tr><td>-g</td><td>指定用户基本组</td><td>useradd  -g  组名  用户名</td></tr><tr><td>-G</td><td>指定用户附加组</td><td>useradd  -G  组名  用户名</td></tr><tr><td>-e</td><td>指定用户失效时间</td><td>useradd  -e  yyyy-mm-dd(失效时间)  用户名</td></tr><tr><td>-d</td><td>指定用户家目录</td><td>useradd  -d  家目录  用户名</td></tr></tbody></table></li><li><h4 id="groupadd：创建组"><a href="#groupadd：创建组" class="headerlink" title="groupadd：创建组"></a>groupadd：创建组</h4><p>语法：groupadd  组名</p></li><li><h4 id="userdel：删除用户"><a href="#userdel：删除用户" class="headerlink" title="userdel：删除用户"></a>userdel：删除用户</h4><p>语法：userdel  参数  用户名(参数：-r：删除用户及家目录)</p></li><li><h4 id="groupdel：删除组。"><a href="#groupdel：删除组。" class="headerlink" title="groupdel：删除组。"></a>groupdel：删除组。</h4></li><li><h4 id="usermod：修改用户信息"><a href="#usermod：修改用户信息" class="headerlink" title="usermod：修改用户信息"></a>usermod：修改用户信息</h4><p>语法：usermod  参数  用户名</p><table><thead><tr><th>参数</th><th>说明</th><th>语法</th></tr></thead><tbody><tr><td>-l</td><td>更改用户名</td><td>usermod  -l  新用户名  旧用户名</td></tr><tr><td>-u</td><td>更改用户UID</td><td>usermod  -u  新UID  用户名</td></tr><tr><td>-g</td><td>更改用户基本组</td><td>usermod  -g  组名  用户名</td></tr><tr><td>-G</td><td>更改用户附加组</td><td>usermod  -G  组名  用户名</td></tr><tr><td>-a</td><td>追加用户附加组</td><td>usermod  -a  -G  新附加组  用户名</td></tr></tbody></table></li><li><h4 id="passwd：修改密码"><a href="#passwd：修改密码" class="headerlink" title="passwd：修改密码"></a>passwd：修改密码</h4><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-l</td><td>锁定用户</td></tr><tr><td>-u</td><td>解锁用户</td></tr></tbody></table></li><li><h4 id="gpasswd：移除组内用户"><a href="#gpasswd：移除组内用户" class="headerlink" title="gpasswd：移除组内用户"></a>gpasswd：移除组内用户</h4><p>语法：gpasswd  参数  用户名</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-d</td><td>删除</td></tr><tr><td>-a</td><td>添加（为附加组）</td></tr></tbody></table></li><li><h4 id="chmod：修改权限"><a href="#chmod：修改权限" class="headerlink" title="chmod：修改权限"></a>chmod：修改权限</h4><p>语法：chmod  参数  权限模式  文件（目录）</p><table><thead><tr><th>权限模式字母形式</th><th></th><th></th><th>数字形式</th></tr></thead><tbody><tr><td>u：用户</td><td>+：增加权限</td><td>r：可读</td><td>4：读</td></tr><tr><td>g：所属组</td><td>-：减少权限</td><td>w：可写</td><td>2：写</td></tr><tr><td>o：其他人</td><td>&#x3D;：确定权限</td><td>x：可执行</td><td>1：执行</td></tr><tr><td>a：全部</td><td></td><td></td><td>0：无权限</td></tr></tbody></table></li><li><h4 id="chown：更改文档所属用户。"><a href="#chown：更改文档所属用户。" class="headerlink" title="chown：更改文档所属用户。"></a>chown：更改文档所属用户。</h4><p>语法：chown  参数  新用户:组名  对象（不修改可以不填）</p><p>参数：-R：递归(目录及目录下所有文件)</p></li><li><h4 id="setfacl：给予指定用户某个对象特殊权限。"><a href="#setfacl：给予指定用户某个对象特殊权限。" class="headerlink" title="setfacl：给予指定用户某个对象特殊权限。"></a>setfacl：给予指定用户某个对象特殊权限。</h4><p>语法：setfacl  参数  设定值  对象</p><table><thead><tr><th>参数</th><th>说明</th><th>语法</th></tr></thead><tbody><tr><td>-m</td><td>设定规则</td><td>setfacl  -m  身份:用户:权限  对象（身份：用户：u，组：g）</td></tr><tr><td>-x</td><td>取消特殊权限</td><td>setfacl  -x  身份:用户  对象</td></tr><tr><td>-b</td><td>取消所有特殊权限</td><td>setfacl  -b  对象</td></tr></tbody></table><p>例子：给zs已a.txt文件读和写的权限</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-tag">setfacl</span>  <span class="hljs-selector-tag">-m</span>  <span class="hljs-selector-tag">u</span>:<span class="hljs-selector-tag">zs</span>:<span class="hljs-selector-tag">rw-</span>  <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.txt</span><br></code></pre></td></tr></table></figure></li><li><h4 id="sudo：让管理员实现定义某些命令谁可以执行。"><a href="#sudo：让管理员实现定义某些命令谁可以执行。" class="headerlink" title="sudo：让管理员实现定义某些命令谁可以执行。"></a>sudo：让管理员实现定义某些命令谁可以执行。</h4><p>先用管理员root输入visudo进入配置文件写上</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">用户名    <span class="hljs-keyword">ALL</span>=(<span class="hljs-keyword">ALL</span>)    给该用户具体权限的完整路径<br></code></pre></td></tr></table></figure></li><li><h4 id="which：查看指定命令的完整路径。"><a href="#which：查看指定命令的完整路径。" class="headerlink" title="which：查看指定命令的完整路径。"></a>which：查看指定命令的完整路径。</h4></li><li><h4 id="ps：显示系统执行的进程。"><a href="#ps：显示系统执行的进程。" class="headerlink" title="ps：显示系统执行的进程。"></a>ps：显示系统执行的进程。</h4><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-a</td><td>显示当前终端所有进程信息</td></tr><tr><td>-u</td><td>以用户的格式显示进程信息</td></tr><tr><td>-x</td><td>显示后台进程进行的参数</td></tr></tbody></table></li><li><h4 id="pstree：查看进程树。"><a href="#pstree：查看进程树。" class="headerlink" title="pstree：查看进程树。"></a>pstree：查看进程树。</h4><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-p</td><td>显示进程的PID</td></tr><tr><td>-u</td><td>显示进程所属用户</td></tr></tbody></table></li><li><h4 id="kill：终止进程。"><a href="#kill：终止进程。" class="headerlink" title="kill：终止进程。"></a>kill：终止进程。</h4><p>语法：kill  参数  进程号(PID)</p><p>killall  进程名称</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-9</td><td>强制停止</td></tr><tr><td>-15</td><td>正常结束进程(并回收资源)</td></tr></tbody></table></li><li><h4 id="find：查找文件或目录"><a href="#find：查找文件或目录" class="headerlink" title="find：查找文件或目录"></a>find：查找文件或目录</h4><p>语法：find  指定路径  参数(参数值)  (后续处理操作)</p><ol><li><h5 id="简单查找：find-指定路径"><a href="#简单查找：find-指定路径" class="headerlink" title="简单查找：find  指定路径"></a>简单查找：find  指定路径</h5></li><li><h5 id="根据类型查找。"><a href="#根据类型查找。" class="headerlink" title="根据类型查找。"></a>根据类型查找。</h5><p>语法：find  路径  -type  参数</p></li></ol><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-type d</td><td>显示路径下所有目录</td></tr><tr><td>-type f</td><td>显示路径下所有文件</td></tr><tr><td>-type l</td><td>显示路径下所有链接文件</td></tr></tbody></table><ol start="3"><li><h5 id="根据深度查找。"><a href="#根据深度查找。" class="headerlink" title="根据深度查找。"></a>根据深度查找。</h5>语法：find  路径  参数</li></ol><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-maxdepth  n</td><td>最大查找深度</td></tr><tr><td>-mindepth  n</td><td>最小查找深度</td></tr><tr><td>-maxdepth  n1  -mindepth  n2</td><td>两个一起用</td></tr></tbody></table><ol start="4"><li><h5 id="根据身份查找。"><a href="#根据身份查找。" class="headerlink" title="根据身份查找。"></a>根据身份查找。</h5></li></ol><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-user  用户名(UID)</td><td>根据用户查找</td></tr><tr><td>-group  组名(GID)</td><td>根据组查找</td></tr><tr><td>-nouser</td><td>查找无主用户</td></tr></tbody></table><ol start="5"><li><h5 id="根据文件名查找：-name-字段"><a href="#根据文件名查找：-name-字段" class="headerlink" title="根据文件名查找：-name 字段"></a>根据文件名查找：-name 字段</h5></li><li><h5 id="find的逻辑组合"><a href="#find的逻辑组合" class="headerlink" title="find的逻辑组合"></a>find的逻辑组合</h5></li></ol><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-a</td><td>与逻辑</td></tr><tr><td>-o</td><td>或逻辑</td></tr><tr><td>-not或！</td><td>非逻辑</td></tr></tbody></table><ol start="7"><li><h5 id="后续处理动作"><a href="#后续处理动作" class="headerlink" title="后续处理动作"></a>后续处理动作</h5></li></ol><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-print</td><td>把命令输出到终端上</td></tr><tr><td>-ls</td><td>在指令最后面加上可以显示具体信息</td></tr><tr><td>-delete</td><td>把找到的东西删除</td></tr><tr><td>-ok</td><td>语法：-ok  可执行的命令  {find的命令找到后的结果}  ;</td></tr></tbody></table></li><li><h4 id="gzip：对单一我呢见进行压缩-生成-gz压缩文件-压缩后源文件不保留"><a href="#gzip：对单一我呢见进行压缩-生成-gz压缩文件-压缩后源文件不保留" class="headerlink" title="gzip：对单一我呢见进行压缩(生成*.gz压缩文件)压缩后源文件不保留"></a>gzip：对单一我呢见进行压缩(生成*.gz压缩文件)压缩后源文件不保留</h4><p>语法：gzip  参数  被压缩文件</p><table><thead><tr><th>参数</th><th>说明</th><th>语法</th></tr></thead><tbody><tr><td>-d</td><td>解压缩(和gunzip命令一样)</td><td>gzip  -d  压缩文件.gzip</td></tr><tr><td>-c</td><td>对文件压缩并保留源文件，可以进行重命名</td><td>gzip  -c  被压缩文件 &gt; 压缩文件名.gz</td></tr><tr><td>-k</td><td>和-c用法一样(centos8支持)</td><td>gzip  -k  被压缩文件</td></tr><tr><td>-#</td><td>#为1-9数字，数字越大压缩比越大，默认为6</td><td></td></tr></tbody></table></li><li><h4 id="zcat：在不解压缩文件的前提下查看文件内容-xzcat和bzcat"><a href="#zcat：在不解压缩文件的前提下查看文件内容-xzcat和bzcat" class="headerlink" title="zcat：在不解压缩文件的前提下查看文件内容(xzcat和bzcat)"></a>zcat：在不解压缩文件的前提下查看文件内容(xzcat和bzcat)</h4></li><li><h4 id="bzip2：和gzip效果一样但后缀为-bz2"><a href="#bzip2：和gzip效果一样但后缀为-bz2" class="headerlink" title="bzip2：和gzip效果一样但后缀为.bz2"></a>bzip2：和gzip效果一样但后缀为.bz2</h4><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-k</td><td>压缩后保留源文件(gzip没有)，其他参数和gzip一样。</td></tr></tbody></table></li><li><h4 id="xz：和bzip2、gzip效果一样。"><a href="#xz：和bzip2、gzip效果一样。" class="headerlink" title="xz：和bzip2、gzip效果一样。"></a>xz：和bzip2、gzip效果一样。</h4><p>后缀为.xz。解压缩命令为unxz</p></li><li><h4 id="zip：压缩文件或目录-压缩后默认保留源文件"><a href="#zip：压缩文件或目录-压缩后默认保留源文件" class="headerlink" title="zip：压缩文件或目录(压缩后默认保留源文件)"></a>zip：压缩文件或目录(压缩后默认保留源文件)</h4><ol><li><h5 id="直接压缩文件"><a href="#直接压缩文件" class="headerlink" title="直接压缩文件"></a>直接压缩文件</h5><p>语法：zip  压缩文件名(*.zip)  被压缩文件</p><p>压缩后保留源文件，可修改文件名，可指定压缩到具体路径</p></li><li><h5 id="解压缩文件"><a href="#解压缩文件" class="headerlink" title="解压缩文件"></a>解压缩文件</h5><p>语法：unzip  *.zip</p><ol><li><p>注意是否会生成重名文件，根据实际情况，替换或重命名</p></li><li><p>参数：-d 指定到某路径 unzip *.zip -d 指定的路径</p></li><li><p>压缩目录：zip 参数 压缩目录名(*.zip) 被压缩目录<br>不加参数只对单一的目录本身压缩，目录下内容没有压缩<br>参数：-r  对目录及目录下内容整体压缩</p></li><li><p>解压缩目录：unzip  *.zip</p><ol><li><p>注意是否有重名目录</p></li><li><p>指定解压缩路径：unzip  *.zip  -d  指定路径</p></li><li><p>在指定路径的同时进行重命名：unzip  *.zip  -d  指定路径&#x2F;.zip</p></li><li><p>如果只想压缩目录下内容(不包含目录本身)，先进入目录，在目录下操作。</p></li></ol></li></ol></li></ol></li><li><h4 id="rpm-目前只用查询软件安装版本"><a href="#rpm-目前只用查询软件安装版本" class="headerlink" title="rpm(目前只用查询软件安装版本)"></a>rpm(目前只用查询软件安装版本)</h4><p>语法：rpm  -q  具体命令</p></li><li><h4 id="yum：包的管理"><a href="#yum：包的管理" class="headerlink" title="yum：包的管理"></a>yum：包的管理</h4><ol><li><h5 id="找仓库路径"><a href="#找仓库路径" class="headerlink" title="找仓库路径"></a>找仓库路径</h5><p>注意：要配置本地仓库的话，一定要挂载到一个目录下</p></li><li><h5 id="网络仓库："><a href="#网络仓库：" class="headerlink" title="网络仓库："></a>网络仓库：</h5><ol><li><p>阿里云仓库：<a href="https://mirrors.aliyun.com/">https://mirrors.aliyun.com/</a></p></li><li><p>华为云仓库：<a href="https://mirrors.huaweicloud.com/">https://mirrors.huaweicloud.com/</a></p></li><li><p>搜狐云仓库：<a href="https://mirrors.sohu.com/">https://mirrors.sohu.com</a></p></li><li><p>网易云仓库：<a href="https://mirrors.163.com/">https://mirrors.163.com</a></p></li><li><p>epel仓库的网络地址[<a href="https://mirrors.aliyun.com/epel7">https://mirrors.aliyun.com/epel7</a> x86 64&#x2F;](<a href="https://mirrors.aliyun.com/epel7">https://mirrors.aliyun.com/epel7</a> x86 64&#x2F;)</p></li><li><p>epel的安全密钥地址：<a href="https://mirrors.aliyun.com/epel/RPM-GPG-KEY-EPEL-7">https://mirrors.aliyun.com/epel/RPM-GPG-KEY-EPEL-7</a></p></li></ol></li><li><h5 id="配置网络仓库文件"><a href="#配置网络仓库文件" class="headerlink" title="配置网络仓库文件"></a>配置网络仓库文件</h5><p>仓库文件名一定是*.repo</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[epel]</span><span class="hljs-comment">##仓库ID一定是连续的字符串</span><br><span class="hljs-comment">##仓库名</span><br><span class="hljs-attr">name</span>=epel<br><span class="hljs-comment">##网络yum仓库位置</span><br><span class="hljs-attr">baseurl</span>=https://mirrors.aliyun.com/epel/<span class="hljs-number">7</span>/x<span class="hljs-number">86_64</span>/<br><span class="hljs-comment">##启用该yum源</span><br><span class="hljs-attr">enabled</span>=<span class="hljs-number">1</span><br><span class="hljs-comment">##安全密钥地址</span><br><span class="hljs-attr">gpgkey</span>=https://mirrors.aliyun.com/epel/RPM-GPG-KEY-EPEL-<span class="hljs-number">7</span><br><span class="hljs-comment">##进行安全密钥检查</span><br><span class="hljs-attr">gpgcheck</span>=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure></li><li><h5 id="配置本地仓库文件"><a href="#配置本地仓库文件" class="headerlink" title="配置本地仓库文件"></a>配置本地仓库文件</h5><ol><li><p>df：查看当前光盘挂载情况</p></li><li><p>mount：挂载</p><p>语法：mount  &#x2F;dev&#x2F;cdrom  &#x2F;media</p><p>#将光盘挂载到&#x2F;media目录下</p></li><li><p>仓库文件*.repo</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[仓库ID]</span><br><span class="hljs-attr">name</span>=名字<br><span class="hljs-attr">baseurl</span>=file:///media<br><span class="hljs-comment">#centos8中有两个路径</span><br><span class="hljs-attr">enabled</span>=<span class="hljs-number">1</span><br><span class="hljs-attr">gpgkey</span>=安全密钥<br><span class="hljs-attr">gpgcheck</span>=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure></li></ol></li><li><h5 id="yum的使用"><a href="#yum的使用" class="headerlink" title="yum的使用"></a>yum的使用</h5><p>语法：yum   选项  参数 </p><p><a href="https://blog.csdn.net/jeikerxiao/article/details/54571064">CentOS 7 - yum常见命令_yum provider-CSDN博客</a></p><table><thead><tr><th>选项</th><th>说明</th><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-h</td><td>显示帮助信息</td><td>install</td><td>安装rpm软件包</td></tr><tr><td>-y</td><td>对所有的提问都回答“yes”</td><td>update</td><td>更新rpm软件包</td></tr><tr><td>-c</td><td>指定配置文件</td><td>check-update</td><td>检查是否有可用的更新rpm软件包</td></tr><tr><td>-q</td><td>安静模式</td><td>remove</td><td>删除指定的rpm软件包</td></tr><tr><td>-v</td><td>详细模式</td><td>list</td><td>显示软件包的信息</td></tr><tr><td>-d</td><td>设置调试等级(0-10)</td><td>search</td><td>检查软件包的信息</td></tr><tr><td>-e</td><td>设置错误等级(0-10)</td><td>info</td><td>显示指定的rpm软件包的描述信息和概要信息</td></tr></tbody></table></li></ol><p>  | -R   | 设置yum处理一个命令的最大等待时间              | clean        | 清理yum过期的缓存                       |<br>   | -C   | 完全从缓存中运行，而不去下载或者更新任何头文件 | shell        | 进入yum的shell提示符                    |<br>  |      |                                                | resolvedep   | 显示rpm软件包的依赖关系                 |<br>   |      |                                                | localinstall | 安装本地的rpm软件包                     |<br>  |      |                                                | localupdate  | 显示本地rpm软件包进行更新               |<br>   |      |                                                | deplist      | 显示rpm软件包的所有依赖关系             |</p><ol><li><p>yum  list  包名</p><p>#查看仓库有无指定安装包</p></li><li><p>yum  remove  包名</p><p>#卸载指定包（一般不用）（centos7只卸载包，centos8会把依赖包一并卸载）</p></li><li><p>yum  history</p><p>#查看安装记录</p></li><li><p>yum  history  info  n</p><p>#查看第n条安装历史</p></li><li><p>yum  history  undo  n</p><p>#撤销第n步操作</p></li><li><p>yum  history  redo  n</p><p>#重做第n步操作</p></li></ol></li><li><h4 id="tar：文件目录的打包与压缩"><a href="#tar：文件目录的打包与压缩" class="headerlink" title="tar：文件目录的打包与压缩"></a>tar：文件目录的打包与压缩</h4><p>语法：tar  参数  路径&#x2F;*.tar  *(被打包对象)</p><ol><li><h5 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h5><p>语法：tar  -cf  路径&#x2F;*.tar  *(被打包对象)</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-c</td><td>打包</td></tr><tr><td>-f</td><td>通用参数</td></tr><tr><td>-v</td><td>显示信息</td></tr></tbody></table></li><li><h5 id="解包-解压缩"><a href="#解包-解压缩" class="headerlink" title="解包(解压缩)"></a>解包(解压缩)</h5><p>语法：tar  -xf  路径&#x2F;*.tar</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-x</td><td>解包</td></tr><tr><td>-C</td><td>解包到指定路径：tar  -xf  路径&#x2F;*.tar   -C  指定路径</td></tr></tbody></table></li><li><h5 id="打包并压缩"><a href="#打包并压缩" class="headerlink" title="打包并压缩"></a>打包并压缩</h5><p>语法：tar  -zcf  路径&#x2F;*.tar.gz   被打包文件</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-z</td><td>调用gzip命令</td></tr><tr><td>-j</td><td>调用bzip2命令</td></tr><tr><td>-J</td><td>调用xz命令</td></tr><tr><td>-a</td><td>自动根据压缩文件后缀选择压缩方式</td></tr></tbody></table></li></ol></li></ol><h1 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h1><ol><li>ctrl + c：强制停止</li><li>Ctrl+d：退出登出</li><li>Ctrl+r：搜索历史命令</li><li>Ctrl+a&#x2F;e：光标移动到命令开始或结束</li><li>Clear或ctrl+l：清屏</li><li>History：查看历史命令</li></ol><h1 id="Vim文本编辑器"><a href="#Vim文本编辑器" class="headerlink" title="Vim文本编辑器"></a>Vim文本编辑器</h1><ol><li><p>vim 文件：打开文件</p></li><li><p>vim 数字 文件：打开文件并将光标移到n行</p></li><li><p>vim &#x2F;关键词 文件：打开文件并高亮关键词</p></li><li><p>shift + 6或者^：光标移到行首</p></li><li><p>shift +4或者$：光标移到行尾</p></li><li><p>gg：光标移到首行。Pgup：向上翻屏</p></li><li><p>G：光标移到末行。Pgdn：向下翻屏</p></li><li><p>复制光标所在行：按键：yy 粘贴：p</p></li><li><p>光标所在行及向下复制行数：按键：数字yy</p></li><li><p>剪切或删除光标所在行：按键：dd（删除后下一行上移）</p></li><li><p>剪切或删除光标所在行及向下指定行数：按键：数字dd（删除后下一行上移）</p></li><li><p>删除后当前行变成空白行：按键：D</p></li><li><p>撤销或恢复：按键：D 恢复：ctrl+r</p></li><li><p>将光标移到指定行：按键：数字+G</p></li><li><p>以当前光标为准，向上或向下移动n行。按键：数字+pgup或pgdn</p></li><li><p>末行模式下快速移动：数字</p></li><li><p>末行模式下：</p><p>保存 :w 。另存为 :w 路径 。退出 :q 。 保存并退出 :wq或x 。  强制 ！ 。查找 :&#x2F;关键词 （上一个&#x2F;下一个 N&#x2F;n）</p></li><li><p>显示行号（临时）</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>关于429的那些事</title>
    <link href="/2024/12/25/%E5%85%B3%E4%BA%8E429%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    <url>/2024/12/25/%E5%85%B3%E4%BA%8E429%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/</url>
    
    <content type="html"><![CDATA[<p>额……</p><p>暂时未完工！</p>]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>使用Hexo搭建自己的博客</title>
    <link href="/2024/12/24/%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <url>/2024/12/24/%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="使用Hexo搭建自己的博客"><a href="#使用Hexo搭建自己的博客" class="headerlink" title="使用Hexo搭建自己的博客"></a>使用Hexo搭建自己的博客</h2><p>对于一个程序员来说，搭建一个属于自己的博客平台是非常有意义的事情。首先，博客可以记录自己的成长历程，也是对自己一段时间学习和工作的总结和沉淀；其他，通过博客可以营销自己，增强自己在互联网或行业内的影响力，为将来更好的职业生涯打一个坚实的基础。前几年有一本名为《软技能 - 代码之外的生存指南》的畅销书，我记得书中有这么一段话：“流行乐队的音乐才华可能并不比夜店驻场乐队高多少，他们为什么就可以在全世界巡回演出，创造一个又一个白金记录？……你的营销做得越好，你的才华才能表现得淋漓尽致。”</p><p>这里顺便啰嗦两句，在互联网如此发达的今天，我们应该如何营销自己呢？自我营销首先要从打造个人品牌做起，对于程序员来说，最容易去做好的一件事情还是搭建自己的博客。博客相当于是你在互联网上的一个基地，尤其是当你拥有了属于自己的独立博客后，你可以做很多自己想做的事情，既可以传达自己的思想，又可以提升自己的影响力，当然如果你的博客经营得非常好，你可以从中获利。当然，除了博客，直播、视频网站、投稿、写书、技术活动都是可选的自我营销方式。当然，做自我营销也需要持之以恒，三天打鱼两天晒网是很难有什么收获的。</p><h3 id="Hexo概述"><a href="#Hexo概述" class="headerlink" title="Hexo概述"></a>Hexo概述</h3><p>Hexo是一个快速、简洁且高效的博客框架，它能够将<a href="https://zh.wikipedia.org/zh-hans/Markdown">Markdown格式</a>的文档渲染成漂亮的网页，这样我们就可以在很短的时间内迅速的创建出网站的静态内容，而Markdown格式对程序员来说相信并不陌生。要想使用Hexo来搭建自己的博客，我实在想不出有什么教程比<a href="https://hexo.io/zh-cn/">官方文档</a>更好，强烈建议大家阅读官方文档来了解Hexo，下面我只做一个简要的使用说明。</p><blockquote><p>说明：<strong>Markdown</strong>是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，同时也对图片、图表、数学公式提供了支持，可以用来书写电子书、软件文档等，同时也可以非常方便的转换为HTML页面或者是PDF文档。</p></blockquote><p>要使用Hexo，首先得确保计算机上已经安装了<a href="https://nodejs.org/en/">node.js</a>环境和<a href="https://git-scm.com/">git</a>环境，前者是一个能够在服务器端运行JavaScript代码的环境，后者是版本控制工具。安装node.js主要是为了使用它的包管理工具npm，所以不需要先系统的学习node.js的知识；而安装git是为了利用版本控制系统克隆代码已经将博客项目托管到三方平台，如果想学习git，最好的资料是官方网站上的<a href="https://git-scm.com/book/zh/v2"><em>Git Pro</em></a>和<a href="http://www.worldhello.net/gotgit/index.html">《Git权威指南》</a>。安装完成后，我们可以通过下面的命令来确认node.js环境以及它的包管理工具是否安装成功。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Shell">node --version<br>npm --version<br></code></pre></td></tr></table></figure><p>可以通过下面的命令来检查是否安装了git环境。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">git --version<br></code></pre></td></tr></table></figure><p>我们可以使用npm来安装Hexo，npm是node.js的包管理工具，跟Python的pip工具作用一样，可以用它来安装依赖库和三方工具。在第一次使用npm的时候，我们可以先将npm的下载源更换为国内的淘宝镜像，这样下载的速度会有非常显著的提升。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">npm config set registry https://registry.npm.taobao.org<br></code></pre></td></tr></table></figure><p>接下来我们就通过npm来安装Hexo，命令如下所示。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">npm install -g hexo-cli<br></code></pre></td></tr></table></figure><p>安装成功后，就可以使用Hexo来创建属于自己的博客啦。</p><h3 id="搭建博客"><a href="#搭建博客" class="headerlink" title="搭建博客"></a>搭建博客</h3><blockquote><p>说明：以下内容基本上来自于Hexo的官方文档，推荐大家阅读官方文档。</p></blockquote><p>我们先通过下面的命令来创建一个专门保存博客项目的文件夹，该命令会从github上克隆博客项目和默认的主题。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">hexo init blog<br></code></pre></td></tr></table></figure><p>接下来我们进入这个文件夹并查看目录结构。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Shell">cd blog<br>ls -lR<br></code></pre></td></tr></table></figure><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs tap">total 232<br>-rw-r--r--   <span class="hljs-number"> 1 </span>Hao  staff   <span class="hljs-number"> 1768 </span><span class="hljs-number"> 8 </span><span class="hljs-number"> 8 </span>01:15 _config.yml<br>drwxr-xr-x <span class="hljs-number"> 274 </span>Hao  staff   <span class="hljs-number"> 8768 </span><span class="hljs-number"> 8 </span><span class="hljs-number"> 8 </span>01:19 node_modules<br>-rw-r--r--   <span class="hljs-number"> 1 </span>Hao  staff <span class="hljs-number"> 109972 </span><span class="hljs-number"> 8 </span><span class="hljs-number"> 8 </span>01:19 package-lock.json<br>-rw-r--r--   <span class="hljs-number"> 1 </span>Hao  staff    <span class="hljs-number"> 443 </span><span class="hljs-number"> 8 </span><span class="hljs-number"> 8 </span>01:15 package.json<br>drwxr-xr-x   <span class="hljs-number"> 5 </span>Hao  staff    <span class="hljs-number"> 160 </span><span class="hljs-number"> 8 </span><span class="hljs-number"> 8 </span>01:15 scaffolds<br>drwxr-xr-x   <span class="hljs-number"> 3 </span>Hao  staff     <span class="hljs-number"> 96 </span><span class="hljs-number"> 8 </span><span class="hljs-number"> 8 </span>01:15 source<br>drwxr-xr-x   <span class="hljs-number"> 3 </span>Hao  staff     <span class="hljs-number"> 96 </span><span class="hljs-number"> 8 </span><span class="hljs-number"> 8 </span>01:15 themes<br></code></pre></td></tr></table></figure><blockquote><p>说明：Windows环境命令行提示符中可以使用dir命令查看目录结构。需要说明的是：<code>_config.yml</code>是博客项目的配置文件；<code>package.json</code>是项目的依赖项文件；<code>scaffolds</code>保存了Markdown文件的模板，也就是向新添加的Markdown文件中默认填充的内容；<code>source</code>目录下有一个名为<code>_post</code>的目录，我们稍后可以将编写好的Markdown文件放到该目录，这样就可以利用Hexo将Markdown文件处理成博客的静态页面，生成的静态页面将置于<code>public</code>目录下；<code>themes</code>文件夹保存了博客使用的主题。</p></blockquote><p>然后我们通过下面的命令来安装项目所需的依赖项（<code>package.json</code>文件指明了这些依赖项）。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">npm install<br></code></pre></td></tr></table></figure><p>做完上述的操作以后，我们已经可以直接通过下面的命令来生成博客。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">hexo generate<br></code></pre></td></tr></table></figure><p>该命令也可以缩写为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">hexo g<br></code></pre></td></tr></table></figure><p>之前我们在安装依赖项的时候包括了一个名为<code>hexo-server</code>的依赖项，该依赖项可以帮助我们启动一个基于node.js的服务器来运行我们的博客项目，使用下面的命令即可启动服务器。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">hexo server<br></code></pre></td></tr></table></figure><p>该命令也可以缩写为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">hexo s<br></code></pre></td></tr></table></figure><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">INFO</span>  <span class="hljs-keyword">Start</span> processing<br><span class="hljs-keyword">INFO</span>  Hexo <span class="hljs-keyword">is</span> running at http://localhost:<span class="hljs-number">4000</span> . Press Ctrl+C <span class="hljs-keyword">to</span> stop.<br></code></pre></td></tr></table></figure><p>从运行命令的提示信息可以看到，服务器已经运转起并使用了4000端口，可以通过<code>Ctrl+C</code>来终止服务器的运行。如果要修改服务器使用的端口，可以在启动服务器的时候加上<code>-p</code>参数；如果希望服务器启动后，自动打开默认的浏览器访问服务器，可以使用<code>-o</code>参数，如下所示。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">hexo s -p 8000 -o<br></code></pre></td></tr></table></figure><p>至此，我们已经可以看到Hexo在没有配置也没有加入自己的Markdown文件下生成的首页，如下图所示。</p><p><img src="/./res/hexo-default-index.png"></p><p>接下来我们修改博客的配置文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">vim _config.yml<br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-comment"># Hexo Configuration</span><br><span class="hljs-comment">## Docs: https://hexo.io/docs/configuration.html</span><br><span class="hljs-comment">## Source: https://github.com/hexojs/hexo/</span><br><br><span class="hljs-comment"># Site</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">骆昊的技术专栏</span><br><span class="hljs-attr">subtitle:</span> <span class="hljs-string">传道、授业、解惑，分享知识带来的快乐</span><br><span class="hljs-attr">description:</span><br><span class="hljs-attr">keywords:</span><br><span class="hljs-attr">author:</span> <span class="hljs-string">骆昊</span><br><span class="hljs-attr">language:</span> <span class="hljs-string">zh</span><br><span class="hljs-attr">timezone:</span><br><br><span class="hljs-comment"># URL</span><br><span class="hljs-comment">## If your site is put in a subdirectory, set url as &#x27;http://yoursite.com/child&#x27; and root as &#x27;/child/&#x27;</span><br><span class="hljs-attr">url:</span> <span class="hljs-string">http://jackfrued.top</span><br><span class="hljs-attr">root:</span> <span class="hljs-string">/</span><br><span class="hljs-attr">permalink:</span> <span class="hljs-string">:year/:month/:day/:title/</span><br><span class="hljs-attr">permalink_defaults:</span><br><br><span class="hljs-comment"># Directory</span><br><span class="hljs-attr">source_dir:</span> <span class="hljs-string">source</span><br><span class="hljs-attr">public_dir:</span> <span class="hljs-string">public</span><br><span class="hljs-attr">tag_dir:</span> <span class="hljs-string">tags</span><br><span class="hljs-attr">archive_dir:</span> <span class="hljs-string">archives</span><br><span class="hljs-attr">category_dir:</span> <span class="hljs-string">categories</span><br><span class="hljs-attr">code_dir:</span> <span class="hljs-string">downloads/code</span><br><span class="hljs-attr">i18n_dir:</span> <span class="hljs-string">:lang</span><br><span class="hljs-attr">skip_render:</span><br><br><span class="hljs-comment"># Writing</span><br><span class="hljs-attr">new_post_name:</span> <span class="hljs-string">:title.md</span> <span class="hljs-comment"># File name of new posts</span><br><span class="hljs-attr">default_layout:</span> <span class="hljs-string">post</span><br><span class="hljs-attr">titlecase:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># Transform title into titlecase</span><br><span class="hljs-attr">external_link:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># Open external links in new tab</span><br><span class="hljs-attr">filename_case:</span> <span class="hljs-number">0</span><br><span class="hljs-attr">render_drafts:</span> <span class="hljs-literal">false</span><br><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">false</span><br><span class="hljs-attr">relative_link:</span> <span class="hljs-literal">false</span><br><span class="hljs-attr">future:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">highlight:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">line_number:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">auto_detect:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">tab_replace:</span><br>  <br><span class="hljs-comment"># Home page setting</span><br><span class="hljs-comment"># path: Root path for your blogs index page. (default = &#x27;&#x27;)</span><br><span class="hljs-comment"># per_page: Posts displayed per page. (0 = disable pagination)</span><br><span class="hljs-comment"># order_by: Posts order. (Order by date descending by default)</span><br><span class="hljs-attr">index_generator:</span><br>  <span class="hljs-attr">path:</span> <span class="hljs-string">&#x27;&#x27;</span><br>  <span class="hljs-attr">per_page:</span> <span class="hljs-number">10</span><br>  <span class="hljs-attr">order_by:</span> <span class="hljs-string">-date</span><br>  <br><span class="hljs-comment"># Category &amp; Tag</span><br><span class="hljs-attr">default_category:</span> <span class="hljs-string">uncategorized</span><br><span class="hljs-attr">category_map:</span><br><span class="hljs-attr">tag_map:</span><br><br><span class="hljs-comment"># Date / Time format</span><br><span class="hljs-comment">## Hexo uses Moment.js to parse and display date</span><br><span class="hljs-comment">## You can customize the date format as defined in</span><br><span class="hljs-comment">## http://momentjs.com/docs/#/displaying/format/</span><br><span class="hljs-attr">date_format:</span> <span class="hljs-string">YYYY-MM-DD</span><br><span class="hljs-attr">time_format:</span> <span class="hljs-string">HH:mm:ss</span><br><br><span class="hljs-comment"># Pagination</span><br><span class="hljs-comment">## Set per_page to 0 to disable pagination</span><br><span class="hljs-attr">per_page:</span> <span class="hljs-number">10</span><br><span class="hljs-attr">pagination_dir:</span> <span class="hljs-string">page</span><br><br><span class="hljs-comment"># Extensions</span><br><span class="hljs-comment">## Plugins: https://hexo.io/plugins/</span><br><span class="hljs-comment">## Themes: https://hexo.io/themes/</span><br><span class="hljs-attr">theme:</span> <span class="hljs-string">landscape</span><br><br><span class="hljs-comment"># Deployment</span><br><span class="hljs-comment">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span><br></code></pre></td></tr></table></figure><p>下面是YAML文件中相关选项的说明。</p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>title</code></td><td>网站的标题</td></tr><tr><td><code>subtitle</code></td><td>网站的副标题</td></tr><tr><td><code>description</code></td><td>网站的描述</td></tr><tr><td><code>keywords</code></td><td>网站的关键词，可以用逗号分隔多个关键词</td></tr><tr><td><code>author</code></td><td>自己的名字</td></tr><tr><td><code>language</code></td><td>网站使用的语言</td></tr><tr><td><code>timezone</code></td><td>网站使用时区，默认使用电脑上设置的时区</td></tr><tr><td><code>url</code></td><td>网址</td></tr><tr><td><code>root</code></td><td>网站根目录</td></tr><tr><td><code>source_dir</code></td><td>资源文件夹，这个文件夹用来存放内容，默认source目录</td></tr><tr><td><code>public_dir</code></td><td>公共文件夹，这个文件夹用于存放生成的站点文件，默认public目录</td></tr><tr><td><code>tag_dir</code></td><td>标签文件夹，默认tags目录</td></tr><tr><td><code>archive_dir</code></td><td>归档文件夹，默认archives目录</td></tr><tr><td><code>category_dir</code></td><td>分类文件夹，默认categories目录</td></tr><tr><td><code>auto_spacing</code></td><td>在中文和英文之间加入空格，默认false</td></tr><tr><td><code>titlecase</code></td><td>把标题转换为首字母大写，默认false</td></tr><tr><td><code>external_link</code></td><td>在新标签中打开链接，默认true</td></tr><tr><td><code>relative_link</code></td><td>把链接改为与根目录的相对位址，默认false</td></tr><tr><td><code>default_category</code></td><td>默认分类</td></tr><tr><td><code>date_format</code></td><td>日期格式，默认YYYY-MM-DD</td></tr><tr><td><code>time_format</code></td><td>时间格式，默认HH:mm:ss</td></tr><tr><td><code>per_page</code></td><td>每页显示的文章数量 ，默认值10，0表示不使用分页</td></tr><tr><td><code>pagination_dir</code></td><td>分页目录，默认为page目录</td></tr><tr><td><code>theme</code></td><td>当前主题名称</td></tr><tr><td><code>deploy</code></td><td>部署部分的设置</td></tr></tbody></table><p>我们将编写好的Markdown文件可以拷贝到<code>source/_posts</code>目录，我们可以在每个Markdown文件的上方添加Front-matter来对文件的布局、标题、分类、标签、发布日期等信息加以说明。所谓Front-matter，就是每个Markdown文件最上方以<code>---</code>分隔的区域，可以在Front-matter中设置以下内容。</p><table><thead><tr><th>参数</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td><code>layout</code></td><td>布局</td><td></td></tr><tr><td><code>title</code></td><td>标题</td><td></td></tr><tr><td><code>date</code></td><td>建立日期</td><td>文件建立日期</td></tr><tr><td><code>updated</code></td><td>更新日期</td><td>文件更新日期</td></tr><tr><td><code>comments</code></td><td>开启文章的评论功能</td><td>true</td></tr><tr><td><code>tags</code></td><td>标签（不适用于分页）</td><td></td></tr><tr><td><code>categories</code></td><td>分类（不适用于分页）</td><td></td></tr><tr><td><code>permalink</code></td><td>覆盖文章网址</td><td></td></tr></tbody></table><p>例如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs Markdown">---<br>title: Python编程惯例<br>category: Python基础<br><span class="hljs-section">date: 2019-8-1</span><br><span class="hljs-section">---</span><br><span class="hljs-section">## Python惯例</span><br><br>“惯例”这个词指的是“习惯的做法，常规的办法，一贯的做法”，与这个词对应的英文单词叫“idiom”。由于Python跟其他很多编程语言在语法和使用上还是有比较显著的差别，因此作为一个Python开发者如果不能掌握这些惯例，就无法写出“Pythonic”的代码。下面我们总结了一些在Python开发中的惯用的代码。<br><br><span class="hljs-bullet">1.</span> 让代码既可以被导入又可以被执行。<br>   if <span class="hljs-strong">__name__</span> == &#x27;<span class="hljs-strong">__main__</span>&#x27;:<br><br><span class="hljs-bullet">2.</span> 用下面的方式判断逻辑“真”或“假”。<br>   if x:<br>   if not x:<br></code></pre></td></tr></table></figure><p>在完成上述工作后，我们可以通过下面的命令先清理之前生成的内容。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">hexo clean<br></code></pre></td></tr></table></figure><p>接下来我们就可以用之前讲过的命令重新生成并运行博客项目。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Shell">hexo generate<br>hexo server -p 8000 -o<br></code></pre></td></tr></table></figure><h3 id="将博客托管到GitHub"><a href="#将博客托管到GitHub" class="headerlink" title="将博客托管到GitHub"></a>将博客托管到GitHub</h3><p>我们可以利用GitHub网站提供的<a href="https://pages.github.com/">Pages服务</a>来托管我们的博客。在GitHub Pages的首页上就有一个教程指导我们如何托管自己的网站，当然第一步得在GitHub上注册一个属于自己的账号，登录成功之后才能进行后续的操作。</p><ol><li><p>根据自己的用户名创建一个仓库，仓库<strong>一定</strong>要取名为“用户名.github.io”。例如：我在GitHub上的用户名是jackfrued，那么我的托管博客项目的仓库一定要命名为jackfrued.github.io。</p><p><img src="/./res/create-new-repo.png"></p></li><li><p>修改博客项目的配置文件<code>_config.yml</code>，配置使用GitHub来部署该博客项目。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">vim _config.yml<br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-comment"># 省略上面的内容</span><br><span class="hljs-comment"># Deployment</span><br><span class="hljs-comment">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">https://github.com/jackfrued/jackfrued.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br></code></pre></td></tr></table></figure><p>上面的配置中，type指定了使用git进行项目部署，repo指定了部署项目的git仓库的URL，我们这里使用的是HTTPS的地址，如果之前配置过密钥对也可以使用SSH的地址，branch指定了将代码同步到仓库中的哪一个分支，通常master分支就是发布项目最终工作成果的分支，也称为项目的主分支。</p></li><li><p>安装名为<code>hexo-deployer-git</code>的部署器插件，通过该插件就能实现一键部署。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure></li><li><p>可以使用下面的命令来实现一键部署到GitHub。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">hexo deploy -g<br></code></pre></td></tr></table></figure><p>或者</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">hexo generate -d<br></code></pre></td></tr></table></figure></li><li><p>接下来在浏览器中输入<a href="https://jackfrued.github.io/">jackfrued.github.io</a>就能够看到自己的博客，现在全世界的人都可以通过这个URL来访问你的博客。大家是否注意到，访问你博客的这个URL就是刚才我们给仓库起的名字，因为你在GitHub上注册的用户名是独一无二的，所以这个域名也是全世界独一无二的。</p></li></ol><h3 id="将博客绑定到自己的域名"><a href="#将博客绑定到自己的域名" class="headerlink" title="将博客绑定到自己的域名"></a>将博客绑定到自己的域名</h3><p>虽然我们已经通过GitHub提供的域名访问到了自己的博客，但是如果我们不愿意“寄人篱下”，我们在利用GitHub Pages提供的托管服务同时，也可以将博客绑定到自己专属的域名。如果暂时还没有购买域名，我们可以在提供域名购买服务的网站（如：<a href="https://www.hichina.com/">万网</a>、<a href="https://www.godaddy.com/">GoDaddy</a>）上进行购买。</p><p><img src="/./res/wanwang.png"></p><blockquote><p>说明：目前国内对域名的管理日趋严格，在购买域名时需要填写一大堆的个人信息，进行实名认证后才能获得域名，这一点相信大家能够理解。</p></blockquote><p>比如说，我现在已经购买了一个名为“jackfrued.top”的域名，如何让它跟“jackfrued.github.io”这个域名做一个绑定呢，我们可以利用<a href="https://dns.console.aliyun.com/">阿里云控制台</a>或者<a href="https://www.dnspod.cn/">DNSPod</a>来做一个域名解析服务。在域名解析平台登录成功后，可以添加或选择自己的域名来配置域名解析。点击“添加记录”按钮，创建一个类型为CNAME的域名解析，CNAME类型的解析代表将一个域名解析到另一个域名，如下图所示。</p><p><img src="/./res/dns-configuration.png"></p><p>完成这一步后，还不能马上通过自己的域名访问到博客项目，最后需要在博客项目的<code>source</code>目录下添加一个名为CNAME的文件（请注意这个文件的名字是全大写字母的）。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">vim CNAME<br></code></pre></td></tr></table></figure><p>编辑该文件的内容，如下所示。</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coq">jackfrued.<span class="hljs-built_in">top</span><br></code></pre></td></tr></table></figure><p>可以清理一下之前生成的内容，然后将项目重新生成并发布到GitHub就大功告成了！现在我们已经拥有了独立域名的博客，希望大家可以利用它做些有意义的事情（记录自己的成长历程、分享自己的工作经验、提升个人的影响力）。加油吧，程序员！</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
